<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>Liferea Development Blog</title>
        <link>https://lzone.de/liferea/blog</link>
        <description>Latest posts from the Liferea blog</description>
        <lastBuildDate>Fri, 30 May 2025 11:44:12 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[Liferea 1.16 RC3 released]]></title>
            <link>https://lzone.de/liferea/blog/2025-04-15-Liferea 1.16-RC3 released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.16%20RC3%20released</guid>
            <pubDate>Tue, 15 Apr 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is another release candidate for 1.16 which brings an unexpected emergency upgrade
to libpeas2 and some smaller fixes.</p>
<h2 id="emergencyupgradetolibpeas2">Emergency upgrade to libpeas2</h2>
<p>Due to an unfortunate <a href="https://gitlab.archlinux.org/archlinux/packaging/packages/pygobject/-/issues/3">change in pygobject</a> libpeas1 will probably be and stay broken 
for all Python use cases including Liferea. To avoid this 1.16-RC3 switches to libpeas2.</p>
<p>Sadly libpeas2 is not compatible to libpeas1 and causes the following breaking:</p>
<ul>
<li>All 3rd party plugins you have installed break as they are incompatible.</li>
<li>3rd party plugins providers need to provide new versions for their plugins compatible with 1.16</li>
<li>It is no longer possible to install 3rd party plugins.</li>
<li>The get_focus plugin looses its configure option.</li>
</ul>
<p>In general I'm a bit sad with both pygobject introducing a breaking change in a minor version update as well a with libpeas causing the plugin breakage by not caring about a compatible upgrade path. Documentation in API migrations nowadays amounts to what "developers ought to do" dropping stuff all around. </p>
<p>This is one more reason to continue focussing on Liferea successor <a href="https://github.com/lwindolf/newsagain">NewsAgain</a> purely based in the Javascript world with as few reliable dependencies as possible getting out of the GNOME universe.</p>
<p>If you care about Liferea there is still some time left for it and still plans for a final GTK4 port.</p>
<h2 id="changes">Changes</h2>
<pre><code>* Removes long deprecated manual proxy setting
  (Lars Windolf)

* #1462 Drop the possibility to save passwords to OPML feed list when
  no keyring is available. This is too insecure.
  (Lars Windolf)

* #1426 Migration to libpeas2, this means
  (Lars Windolf)

* #1426 New configure option to set girepository dependency version
  (Lars Windolf)

* Fixes escaping of JS exception texts
  (Lars Windolf)

* Fixes Youtube video embedding regression
  (Lars Windolf)
</code></pre>
<h2 id="noteformaintainers">Note for maintainers</h2>
<p>There is some uncertainty about the girepository version to use. It depends on which pygobject
you package for. You might need to change the version in configure.ac.</p>
<p>See also <a href="https://gitlab.gnome.org/GNOME/libpeas/-/issues/60">https://gitlab.gnome.org/GNOME/libpeas/-/issues/60</a></p>
<h2 id="download">Download</h2>
<p>You can download the release from <a href="https://github.com/lwindolf/liferea/releases/tag/v1.16-RC3">https://github.com/lwindolf/liferea/releases/tag/v1.16-RC3</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea breaks with pygobject 3.52 upgrade]]></title>
            <link>https://lzone.de/liferea/blog/2025-03-26-Liferea breaks with pygobject 3.52 upgrade</link>
            <guid>https://lzone.de/liferea/blog/Liferea%20breaks%20with%20pygobject%203.52%20upgrade</guid>
            <pubDate>Wed, 26 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>If you upgrade pygobject 3.52.3 you might see <a href="https://github.com/lwindolf/liferea/issues/1425">Liferea stopping to work</a> due to a plugin issue.  As I understand it so far this is not a Liferea problem
and it affects all GTK/GNOME apps using the libpeas 1.0 library together with pygobject 3.52.3.</p>
<p>Other affected applications are: Rhythmbox, gedit, eog, xed, totem (<a href="https://gitlab.archlinux.org/archlinux/packaging/packages/pygobject/-/issues/3">details</a>).</p>
<h2 id="workaround">Workaround</h2>
<p>You have to downgrade pygobject to 3.50 using you distro mechanisms.</p>
<h2 id="howwillthisbefixed">How will this be fixed?</h2>
<p>It seems unclear how this will play out</p>
<ol>
<li>pygobject reverting the change</li>
<li>distros staying at pygobject 3.50.x</li>
</ol>
<p><strong>There is nothing applications can do</strong> besides porting to GTK4, which for Liferea is underway, 
but will take a while.</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.16 RC1 Released]]></title>
            <link>https://lzone.de/liferea/blog/2025-02-09-Liferea 1.16-RC1 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.16%20RC1%20Released</guid>
            <pubDate>Sun, 09 Feb 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is the first release candidate for the new stable release line 1.16.x. Once 1.16.0 is ready 
all focus will go to a GTK4 based 1.17.x version.</p>
<h2 id="callfortranslations">Call for translations</h2>
<p>As we are getting ready for a new stable release I want to ask all translators to check and
update the translations! Your work is always welcome.</p>
<h2 id="changes">Changes</h2>
<pre><code>* Add error banner for node source login failures
  (Lars Windolf)

* Add a hint for GoogleReader API that it can be used with FreshRSS, FeedHQ, Miniflux
  (Lars Windolf)

* #763, #940 New domain based HTTP 429 handling. Support for Retry-After seconds (but not date),
  defaulting to 5min cooldown
  (Lars Windolf)

* #712 Send Accept-Language HTTP header 
  (Lars Windolf)

* Fixes #1337, #1273: FreshRSS login/update problems
  (Lars Windolf)

* Fixes #499 invalid URIs allowed when dropping text
  (Lars Windolf)

* Fixes broken handlebars templates due to XLST attribute escaping.
  (Lars Windolf)

* Fixes node source creation regression
  (Lars Windolf)
</code></pre>
<h2 id="download">Download</h2>
<p>Get the latest source at <a href="https://github.com/lwindolf/liferea/releases/tag/v1.16-RC1">https://github.com/lwindolf/liferea/releases/tag/v1.16-RC1</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.15.9 Released]]></title>
            <link>https://lzone.de/liferea/blog/2025-01-21-Liferea 1.15.9 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.15.9%20Released</guid>
            <pubDate>Tue, 21 Jan 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Today sees a new release of Liferea with fixes, translation updates and some major changes.</p>
<h2 id="integrateddownloadmanager">Integrated Download Manager</h2>
<p>Starting with Liferea 1.15.9 there is a simple integrated download manager. The idea is to 
be roughly on-par with the features modern browsers support. While the download manager
is basic it should improve user experience a lot.</p>
<p>Up until now we had a hard-coded list of typical download managers. This had several 
disadvantages:</p>
<ul>
<li>Those integrations broke with every major distro release as those different download managers kept appearing and disappearing.</li>
<li>I suspect many users didn't know what "aria-gtk" / "kget" / "uget" actually are.</li>
<li>Checking if those options are actually installed in the system is ugly.</li>
<li>There is usually a look&amp;feel gap when launching the download manager sometimes using
other toolkits or a very complex GUI</li>
</ul>
<p>Now Liferea has a very simple download manager implemented using simple single thread
Python network fetching. Hopefully this will increase usability and download workflows.</p>
<h2 id="renderingchanges">Rendering Changes</h2>
<p>This release fixes the dark theme switching regression in the item view. The dark mode item view
feature was lost some releases ago because of GTK4 deprecations. Since GTK4 there is no more
GTK supported way to determine theme colors. </p>
<p>To still do dark mode switching Liferea follows (Devhelp and other tools using WebkitGTK) which 
switch light/dark mode purely with CSS and static theme-independant colors.</p>
<p><strong>Sadly this will mean a visible color mismatch to the GTK theme.</strong> This is mostly appearant in
dark mode. Also the link color is set to blueish and can't follow the GTK theme color for links anymore.</p>
<p>Many other applications are also suffering from this. Sorry there is just no way to do it anymore.
If you really hate the default CSS style please consider <a href="https://lzone.de/liferea/blog/Liferea-Trick-10-Custom-CSS-for-Article-Rendering">changing them using custom CSS</a>.</p>
<h2 id="itemviewlayoutredesign">Item View Layout Redesign</h2>
<p>Along with the theme adaptions come a redesign of the item view. To be honest the look &amp; feel
is heavily inspired by Jan Lukas Gernert's <a href="https://gitlab.com/news-flash/news_flash_gtk">NewsFlashGTK</a> which I consider very well done. It is a very
calm theme reducing distraction and a good balance for reading longer and shorter texts.</p>
<h2 id="readermoderemoved">Reader Mode Removed</h2>
<p>The user facing options to enable/disable "Reader Mode" in the preferences and the item view pane
content menu are now gone. The code paths were too complicated and the results and fallback in case
of errors was very unsatisfactory.</p>
<p>Still the use of "Readability.js" the library behind "Reader Mode" is still active. It is now automatically
applied when the HTML scraping is used. No user interaction needed.</p>
<h2 id="changes">Changes</h2>
<pre><code>* #1391: GObject refactoring nodePtr -&gt; Node, updateJobPtr -&gt; UpdateJob 
  to allow plugins modifying the feed list.
  (Lars Windolf)

* Fixes #1387: Dark theme lost in preview window
  (Lars Windolf)

* Fixes HTTP redirects not working
  (Lars Windolf)

* Fixes memory leaks in network callbacks
  (Lars Windolf)

* Fixes unnecessary LifereaBrowser clearing on layout change
  (Lars Windolf)

* New unit tests for update handling code
  (Lars Windolf)

* #1388 Implemented download manager plugin, all preferences
  for external tools were dropped
  (Lars Windolf)

* Refactoring of plugin management, code reorganized. Disabling plugins
  now does not disable base plugins (needed for auth and node sources)
  as this would prevent startup
  (Lars Windolf)

* Refactoring of content scraping, processing now happens in Javascript
  on entire source documents. We now store a bit more data, but get better
  extraction results
  (Lars Windolf)

* Support for lazy loading &lt;img data-src=""&gt; definitions. This unbreaks
  images when scraping some websites
  (Lars Windolf)

* Redesign of the HTML view. Look &amp; feel is adapted from Newsflash.
  There is now a max-width and less cluttered reading.
  (Lars Windolf)

* Getting rid of XSLT in favor of using Handlebars.js
  (Lars Windolf)

* Updated Czech translation (Amereyeu)
* Updated Albanian translation (Besnik Bleta)
</code></pre>
<h2 id="download">Download</h2>
<p>Get the release at https://github.com/lwindolf/liferea/releases/tag/v1.15.9</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.15.8 Released]]></title>
            <link>https://lzone.de/liferea/blog/2024-09-25-Liferea 1.15.8 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.15.8%20Released</guid>
            <pubDate>Wed, 25 Sep 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>A new bugfix release is here.</p>
<h2 id="changes">Changes</h2>
<ul>
<li><h1 id="1289solvesomewebkitdeprecations">1289 Solve some Webkit deprecations</h1>
<p>(Lars Windolf)</p></li>
<li><p>Fixes #1359: Prevent passing "" as CLI argument causing a useless subscription.
Also checks for duplicates when subscribing from CLI/DBUS.
(Lars Windolf)</p></li>
<li><p>Fixes #1372: Fix feed icon not parsing if the URL doesn't have a file extension bug 
(Stomern)</p></li>
<li><p>Fixes #1382: Doesn't recognize atom:link element with no rel attribute bug 
(Lars Windolf, reported by Ed Davies)</p></li>
<li><p>Update of Turkish translation (emintufan)</p></li>
</ul>
<h2 id="download">Download</h2>
<p>Get the release at https://github.com/lwindolf/liferea/releases/tag/v1.15.8</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Website Scraping Tutorial 1   Feed of Manga Chapters]]></title>
            <link>https://lzone.de/liferea/blog/2023-12-30-Website Scraping Tutorial 1 - Feed of Manga Chapters</link>
            <guid>https://lzone.de/liferea/blog/Website%20Scraping%20Tutorial%201%20%20%20Feed%20of%20Manga%20Chapters</guid>
            <pubDate>Sat, 30 Dec 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Are you by any chance a manga fan? Does your favourite manga website not 
publish RSS feeds? Then you might be interested in this scraping example
for mangas hosted at <code>mangakatana.com</code>.</p>
<h2 id="howitworks">How it works</h2>
<p><code>mangakatana.com</code> has manga overview pages like this one for 
<a href="https://mangakatana.com/manga/the-eminence-in-shadow.22020">Eminence in Shadow</a>.
If you inspect the chapter list on this page (right click on it 
and choose "Inspect") you see a HTML structure like this:</p>
<pre><code>&lt;div class="chapters"&gt;
     ...
     &lt;div class="chapter"&gt;
        &lt;a href="https://mangakatana.com/manga/the-eminence-in-shadow.22020/c59"&gt;Chapter 59&lt;/a&gt;
     &lt;/div&gt;
     ...
     &lt;div class="chapter"&gt;
        &lt;a href="https://mangakatana.com/manga/the-eminence-in-shadow.22020/c58"&gt;Chapter 58&lt;/a&gt;
     &lt;/div&gt;
     ...
&lt;/div&gt;
</code></pre>
<p>One way to extract this structure is using XSLT. An example stylesheet
can be found in the RSS scraping example repo: <a href="https://github.com/lwindolf/rss-scraping/blob/main/examples/mangakatana-chapters.xsl">mangakatana-chapters.xsl</a>.</p>
<p>Using this stylesheet we can create a feed like this:</p>
<ol>
<li><p>Download the XSLT stylesheet file to <code>~/.config/liferea/</code></p></li>
<li><p>Right click in the feed list and choose "New subscription …"</p></li>
<li><p>Click "Advanced"</p></li>
<li><p>Select "Command" as feed source</p></li>
<li><p>Set the following command</p>
<p>curl -L https://mangakatana.com/manga/the-eminence-in-shadow.22020 | xsltproc --html --novalid ~/.config/liferea/mangakatana-chapters.xsl -</p></li>
<li><p>Click "OK" to subscribe</p></li>
<li><p>Finally open the feed properties</p></li>
<li><p>In tab "Cache" set cache to "Unlimited"</p></li>
<li><p>In tab "Advanced" you can optionally enable "Auto-load item link…"</p></li>
</ol>
<p>If it does not work check wether you have <code>curl</code> and <code>xsltproc</code> installed!</p>
<h2 id="contributeexamples">Contribute Examples!</h2>
<p>Did you adapt the XLST to other websites? If yes consider making a pull request with
your new stylesheet to the <a href="https://github.com/lwindolf/rss-scraping">RSS scraping repo</a>!</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.15.5 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-12-23-Liferea 1.15.5 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.15.5%20Released</guid>
            <pubDate>Sat, 23 Dec 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This release brings small improvements to the trayicon plugin and content filtering using <a href="https://github.com/cure53/DOMPurify">DOMPurify</a>  which should increase security against XSS attacks via feeds providing  rich HTML content.</p>
<h2 id="changes">Changes</h2>
<pre><code>* #1322 Remove Mate workaround from trayicon plugin
  (Yuri Konotopov)

* #1318 Set prgname to match application id (needed for KDE)
  (bbhtt)

* #1317 Support XDG_CONFIG_HOME for trayicon plugoin config
  (bbhtt)

* Update Readability.js to recent version
  (Lars Windolf)

* Added DOMPurify.js for content filtering
  (Lars Windolf)
</code></pre>
<h2 id="download">Download</h2>
<p>You can download the new release from <a href="https://github.com/lwindolf/liferea/releases/tag/v1.15.5">https://github.com/lwindolf/liferea/releases/tag/v1.15.5</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.15.4 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-10-22-Liferea 1.15.4 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.15.4%20Released</guid>
            <pubDate>Sun, 22 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This release brings small fixes and a rework of the trayicon plugin.</p>
<h2 id="improvedtrayicon">Improved trayicon</h2>
<p>Thanks to the work of Yuri Konotopov the trayicon plugin now supports AppIndicator
and libayatana. The important difference here is that the new item counter can be shown
as a text label next to the icon which makes for much improved rendering.</p>
<p>There are some limitations though as AppIndicator might not work perfect in all implementations
(e.g. XFCE). </p>
<h2 id="changes">Changes</h2>
<pre><code>    * Improve on #1192 by doing pane sanity checks on each resize
      (Lars Windolf)

    * Fixes #1297: Reorder loading plugins and deactivating webkit-settings
      (Lars Windolf)

    * #1305 Refactoring of the trayicon plugin to support  AppIndicator and libayatana
      (Yuri Konotopov)
</code></pre>
<h2 id="download">Download</h2>
<p>You can download the new release from <a href="https://github.com/lwindolf/liferea/releases/tag/v1.15.4">https://github.com/lwindolf/liferea/releases/tag/v1.15.4</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[20 years of Liferea and the future]]></title>
            <link>https://lzone.de/liferea/blog/2023-09-16-20 years of Liferea and the future</link>
            <guid>https://lzone.de/liferea/blog/20%20years%20of%20Liferea%20and%20the%20future</guid>
            <pubDate>Sat, 16 Sep 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This project went <strong>20</strong> this year. I do fondly remember having announced the most early 
releases on freshmeat.net which back then was the way to find out about good and active
open source projects. Since those days many awesome contributors helped developing and 
maintaining Liferea to have the extensive feature set it has. For me the contributors
suddenly appearing and without any conditions helping on the project is the most motivating
and amazing thing about developing in open source.</p>
<p>To be honest all the years I've foremost maintained Liferea as a way to read news myself.
The reason I believe why this needs to be done using a feed reader is that you need a
useful interface to efficiently sift through many headlines and at the end to read those
you select as clutter-free as possible. Only then you have the space to actually process
the news content and not to just "consume" it. The web and web browser are just not build
for this use case. They solve the "as visual" as possible and "as much distraction as
possible" use case.</p>
<p>Maintaining this project for so long of course lets you know where the actual cost lies with
the maintenance work. I'm not talking of adding new features or improving performance or
usability, no I'm talking the ugly maintenance work. From a maintainer motivation perspective
it is very important to address this type of work. Be it by automating stuff or simplifying
workflows or choosing SW dependencies that help with this.</p>
<p>Looking back at those 20 years for me the GNOME ecosystem developed in a way that the 
maintenance work was ever increasing. The different aspects of this are the major GTK releases
causing massive refactorings, continuous API deprecations causing compiler noise and work that
does not benefit the features. So every time I was close to dropping the project, the reason
always was the GTK development cycle. I'm not judging here, there is just a mismatch of 
the innovation cycle in the GNOME world and in this feed reader project. This is for example
different with another important library for Liferea: libxml2. The API was practically 95% 
stable for 20 years. Zero maintenance effort!</p>
<p>To be able to continue Liferea for a longer time I therefore aim to have a similar stable
base platform as libxml2. I'm rather convinced that such a stack is found by going downwards
in the average SW stack. Lower SW stack layers tend to be more stable and change more rarely.
Depending on those lowers the maintenance work.</p>
<p>So the question for me is: what is a development platform that will stay the same for… say the 
next 10 years? Which minimizes maintainenance work and allows focussing on features? I believe
one answer is progressive web apps on ES6 without a framework (like React, Vue, …). With this
in mind and the added advantage of cross-platform support <strong>I plan to prototype a backend-less feed reader
PWA that can succeed my use case of Liferea</strong>.</p>
<p>As for this GTK feed reader project <strong>I promise to keep Liferea up for 2 more years</strong>! I'm pretty sure
about not doing a GTK+4 port anymore. I intend to provide a good migration path to the new PWA and 
I hope to be able to maintain this as long as I've maintained Liferea. BTW it will be as ugly and clumsy
as many people say the Liferea GUI is, but the functionality will be great :-)</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.15.3 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-09-15-Liferea 1.15.3 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.15.3%20Released</guid>
            <pubDate>Fri, 15 Sep 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a bugfix release for 1.15. Please upgrade!</p>
<h2 id="changes">Changes</h2>
<pre><code>* Fixes #1297: Enabling plugin 'webkit-settings' crashes Liferea
  (reported by Paul Gevers)

* Fixes #1294: Clicking 'remove item' caused a SIGSEGV
  (reported by Rich Coe)

* Fixes #1276: Old WebKitCache cache not cleaned
  (reported by hasezoey)
</code></pre>
<h2 id="download">Download</h2>
<p>You can get the release from <a href="https://github.com/lwindolf/liferea/releases/tag/v1.15.3">https://github.com/lwindolf/liferea/releases/tag/v1.15.3</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.15.2 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-08-30-Liferea 1.15.2 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.15.2%20Released</guid>
            <pubDate>Wed, 30 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a bugfix release. It provides an important stability fix regarding feed parsing.
Kudos to Rich Coe for debugging and fixing the issue!</p>
<h2 id="changes">Changes</h2>
<pre><code>    * Fixes #1291: Feed parsing is broken
      (Rich Coe)
</code></pre>
<h2 id="download">Download</h2>
<p>You can get the latest tarball from <a href="https://github.com/lwindolf/liferea/releases/tag/v1.15.2">https://github.com/lwindolf/liferea/releases/tag/v1.15.2</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.15.1 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-08-14-Liferea 1.15.1 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.15.1%20Released</guid>
            <pubDate>Mon, 14 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a new feature release. It introduces the long awaited switch to libsoup3 and libwebkit2gtk-4.1.
Thanks to many testers helping testing the latest code from git some errors were ironed out already. 
Still there is an issue remaining where feed updates are getting stuck when updating while <a href="https://github.com/lwindolf/liferea/issues/1276">DNS resolution/Wifi/network…  fails</a>. Please comment if you also experience this issue!</p>
<p>Also noteworthy is a simplification of the debug handling which removes three CLI parameters
<code>--debug-performance</code>, <code>--debug-trace</code> and <code>--debug-verbose</code>.</p>
<h2 id="changes">Changes</h2>
<pre><code>    * Update to libsoup3 and libwebkit2gtk-4.1
      (Lars Windolf)

    * Fixes #1285: HTTP 304 incorrectly caused error state
      (Rich Coe)

    * Fixes #1272: Crash on moving feed into new folder
      (Lars Windolf, reported by Jakub T. Jankiewicz)

    * Fixes #1262: Plugin installer: duplicate punctuation
      (Christian Stadelmann)

    * Fixes #1250: Incorrect item_id when downloading AMP URLs
      (Alexandre Erwin Ittner)

    * Fixes #1248: Can't maximize for reading feeds
      (Lars Windolf)

    * Fixes #1242: Dropping not-functioning Pocket bookmark URL
      (Lars Windolf)

    * Fixes #1241: Dropping not-functioning identi.ca bookmark URL
      (Lars Windolf)

    * Fixes #1240: TypeError on add-bookmark-site preferences
      (Lucidiot)

    * Many fixes for static code analysis warnings
      (Lars Windolf)

    * Simplified debug handling. Drop --debug-performance
      --debug-trace and --debug-verbose CLI parameters.

    * Removed stale Deutsche Welle Brasil feed from pt-BR default feed list
      (Alexandre Erwin Ittner)

    * Updated appdata description and summary
      (bbhtt)

    * Add Russian user documentation (slichtzzz)
    * Updated Czech translation (Amerey)
    * Updated Brazilian Portugese translation (Fúlvio Alves)
</code></pre>
<h2 id="download">Download</h2>
<p>You can fetch the latest tarball from <a href="https://github.com/lwindolf/liferea/releases/tag/v1.15.1">https://github.com/lwindolf/liferea/releases/tag/v1.15.1</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[German TV Mediathek]]></title>
            <link>https://lzone.de/liferea/blog/2023-08-13-German TV Mediathek</link>
            <guid>https://lzone.de/liferea/blog/German%20TV%20Mediathek</guid>
            <pubDate>Sun, 13 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>If you are native German speaker and want to consume public TV station
content using Liferea you can do so by following the RSS feeds provided
by <a href="https://mediathekviewweb.de/">https://mediathekviewweb.de/</a>.</p>
<p>To easily import some of the most important feeds here is an <a href="/liferea/blog/assets/german-tv.opml">OPML file</a>
that you can download and import in Liferea using <code>Subscriptions</code> -&gt; <code>Import Feedlist</code>.</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.14.6 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-08-02-Liferea 1.14.6 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.14.6%20Released</guid>
            <pubDate>Wed, 02 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a bugfix release for 1.14. Please upgrade!</p>
<h2 id="changes">Changes</h2>
<pre><code>* Fixes #1272: crash when moving feed to empty folder
  (reported by Jakub T. Jankiewicz)

* Fixes #1198: FreshRSS logging in correctly but can't get posts
  (reported by Roger Gonzalez)

* Fixes #1248 Can’t maximize for reading feeds
  (reported by ksso83)
</code></pre>
<h2 id="download">Download</h2>
<p>Get Liferea from https://github.com/lwindolf/liferea/releases/tag/v1.14.6</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.15.0 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-04-15-Liferea 1.15.0 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.15.0%20Released</guid>
            <pubDate>Sat, 15 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is the first release of the new unstable line 1.15. The current idea is to release a bit
faster than every two years. So not so much features will be introduced before 1.16</p>
<h2 id="changes">Changes</h2>
<pre><code>    * Fixes #1217, #1224: Endless recursion in 1.14.3
      (reported by uduecoder, mokraemer)

    * Fixes #1214: crash in conf_get_bool_value_from_schema
      (mozbugbox, reported by Mikel Olasagasti)

    * Fixes #1215: failed to build in launchpad PPA due to
      auto_test permission issue (reported by PandaJim)

    * Fixes #1212: 1.14.1 crash when refreshing feeds.
      (mozbugbox, reported by Froggy232)

    * Fixes #1198: FreshRSS logging in correctly but can't get posts
      (reported by Roger Gonzalez)

    * Fixes a memory leak when reloading CSS
      (Lars Windolf)

    * Fixes CVE-2023-1350: RCE vulnerability on feed enrichment
      (patch by Alexander Erwin Ittner)

    * Fixes #1200: Crash on double free
      (mozbugbox)

    * Improve #1192 be reordering widget creation order
      (Lars Windolf)

    * Improvements to the libnotify plugin
      (Tasos Sahanidis)

    * Fixes a g_object_unref warning on shutdown
    * Drops a debug output in the plugin installer
    * Drop webkit inspector from installable plugins in favour of --debug-html
    * Drop pane plugin from default plugins
    * Drop pane plugin (old workaround for pane issues)
</code></pre>
<h2 id="download">Download</h2>
<p>As always you can get the release tarball from Github: <a href="https://github.com/lwindolf/liferea/releases/tag/v1.15.0">https://github.com/lwindolf/liferea/releases/tag/v1.15.0</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.14.5 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-04-09-Liferea 1.14.5 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.14.5%20Released</guid>
            <pubDate>Sun, 09 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is another stabilizitation release for 1.14. I'm cautiously optimistic that we have solved most of the instabilities now :-) </p>
<h2 id="changes">Changes</h2>
<pre><code>* Dropping tray icon plugin from list of per-default activated plugins

* Fixes #1127: corrupted double-linked list
  (reported by Paul Gevers)

* Fixes #1229: assertion when deleting feeds too quickly
  (reported by Tasos Sahanidis)

* Fixing format and cast errors (#1223)
  (reported by Paul Gevers)
</code></pre>
<h2 id="download">Download</h2>
<p>Get Liferea from https://github.com/lwindolf/liferea/releases/tag/v1.14.5</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.14.4 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-03-30-Liferea 1.14.4 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.14.4%20Released</guid>
            <pubDate>Thu, 30 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>1.14 is not as stable yet as intended and is suffering from startup race conditions. This bugfix release tries to further eliminate those issues.</p>
<h2 id="changes">Changes</h2>
<pre><code>* Fixes #1217, #1224: Endless recursion in 1.14.3
  (reported by uduecoder, mokraemer)

* Additional fixes for #1214: crash in conf_get_bool_value_from_schema
  (reported by Mikel Olasagasti)

* Fixes a g_object_unref warning on shutdown
* Drops a debug output in the plugin installer
</code></pre>
<h2 id="download">Download</h2>
<p>Get Liferea from https://github.com/lwindolf/liferea/releases/tag/v1.14.4</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.14.3 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-03-23-Liferea 1.14.3 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.14.3%20Released</guid>
            <pubDate>Thu, 23 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is another 1.14 bugfix release to address a crash affecting some users and a build issue when running tests.</p>
<h2 id="changes">Changes</h2>
<pre><code>    * Fixes #1214: crash in conf_get_bool_value_from_schema
      (mozbugbox, reported by Mikel Olasagasti)

    * Fixes #1215: failed to build in launchpad PPA due to
      auto_test permission issue (reported by PandaJim)
</code></pre>
<h2 id="download">Download</h2>
<p>Get Liferea from https://github.com/lwindolf/liferea/releases/tag/v1.14.3</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.14.2 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-03-20-Liferea 1.14.2 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.14.2%20Released</guid>
            <pubDate>Mon, 20 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a stability fix for 1.14.1. The fix of CVE-2023-1350 in 1.14.1 did contain 
a memory error that leads to crashes. Sorry about that. Please upgrade to avoid the 
problem!</p>
<h2 id="changes">Changes</h2>
<pre><code>* Fixes #1212: 1.14.1 crash when refreshing feeds.
  (mozbugbox, reported by Froggy232)

* Fixes a memory leak when reloading CSS
  (Lars Windolf)
</code></pre>
<h2 id="download">Download</h2>
<p>Get Liferea from https://github.com/lwindolf/liferea/releases/tag/v1.14.2</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.12.10 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-03-12-Liferea 1.12.10 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.12.10%20Released</guid>
            <pubDate>Sun, 12 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is an important security fix for 1.12. Please upgrade!</p>
<h2 id="cve20231350remotecodeexecutiononfeedenrichment">CVE-2023-1350 Remote code execution on feed enrichment</h2>
<p>If you have enabled "Extract full content from HTML5 and Google AMP" for one or 
more of your feed subscriptions it is possible for a an attacker to inject a script command
that would run any command on your system.</p>
<p>Upgrading to 1.12.10 or 1.14.1 solves this security problem. </p>
<p>If you cannot upgrade disable "Extract full content from HTML5 and Google AMP" for all
of you feeds. This can be done in the feed properties dialog,</p>
<p>If you have many feeds you might want to do this automatically:</p>
<ol>
<li>Close Liferea</li>
<li>Open <code>~/.config/liferea/feedlist.opml</code> in an editor</li>
<li>Replace all occurences of <code>html5Extract="true"</code> with an empty string</li>
</ol>
<h2 id="changes">Changes</h2>
<pre><code>    * Fixes CVE-2023-1350: RCE vulnerability on feed enrichment
      (patch by Alexander Erwin Ittner)
</code></pre>
<h2 id="download">Download</h2>
<p>Get Liferea from https://github.com/lwindolf/liferea/releases/tag/v1.12.10</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.14.1 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-03-12-Liferea 1.14.1 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.14.1%20Released</guid>
            <pubDate>Sun, 12 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is an important security fix for 1.14. Please upgrade!</p>
<h2 id="cve20231350remotecodeexecutiononfeedenrichment">CVE-2023-1350 Remote code execution on feed enrichment</h2>
<p>If you have enabled "Extract full content from HTML5 and Google AMP" for one or 
more of your feed subscriptions it is possible for a an attacker to inject a script command
that would run any command on your system.</p>
<p>Upgrading to 1.14.1 solves this security problem. </p>
<p>If you cannot upgrade disable "Extract full content from HTML5 and Google AMP" for all
of you feeds. This can be done in the feed properties dialog,</p>
<p>If you have many feeds you might want to do this automatically:</p>
<ol>
<li>Close Liferea</li>
<li>Open <code>~/.config/liferea/feedlist.opml</code> in an editor</li>
<li>Replace all occurences of <code>html5Extract="true"</code> with an empty string</li>
</ol>
<h2 id="changes">Changes</h2>
<pre><code>    * Fixes CVE-2023-1350: RCE vulnerability on feed enrichment
      (patch by Alexander Erwin Ittner)

    * Fixes #1200: Crash on double free
      (mozbugbox)

    * Improve #1192 be reordering widget creation order
      (Lars Windolf)
</code></pre>
<h2 id="download">Download</h2>
<p>Get Liferea from https://github.com/lwindolf/liferea/releases/tag/v1.14.1</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.14.0 Released]]></title>
            <link>https://lzone.de/liferea/blog/2023-01-10-Liferea 1.14.0 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.14.0%20Released</guid>
            <pubDate>Tue, 10 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Here comes the newest stable release line of Liferea 1.14!</p>
<h2 id="featuresintroducedwith114">Features introduced with 1.14</h2>
<p>First: Many thanks to all the contributors and package maintainers that made this possible!</p>
<h3 id="internalbrowser">Internal Browser</h3>
<ul>
              <li>New 'Reader mode' preference that allows stripping all web content</li>
              <li>Implement support for Webkits Intelligent Tracking Protection</li>
              <li>New progress bar when loading websites</li>
              <li>Youtube videos from media:video can be embedded now with a click on the video preview picture.</li>
              <li>Changes to UserAgent handling: same UA is now used for both feed fetching
              and internal browsing. User agent now indicates Android+Mobile per default
              instead of suggesting a Linux desktop to better adapt to the smaller
              (in comparison to browsers) rendering pane. Additionally special env
              vars LIFEREA_UA and LIFEREA_UA_ANONYMOUS now also affect the internal
              browsing.</li>
</ul>
<h3 id="gui">GUI</h3>
<ul>
              <li>New view mode 'Automatic' which switches between 'Normal' and 'Wide' mode based 
              on the window proportions.</li>
              <li>Liferea now supports the new GTK dark theme logic, where in the GTK/GNOME preferences
              you define wether you "prefer" dark mode or light mode</li>
              <li>Favicon discovery improvements: now detects all types of Apple Touch Icons, MS Tile 
              Images and Safari Mask Icons</li>
              <li>Increase size of stored favicons to 128x128px to improve icon quality in 3-pane wide view.</li>
              <li>Make several plugins support gettext</li>
              <li>Allow mutiple feed in same libnotify notification</li>
              <li>Redesign of the update message in the status bar. It now shows a
              update counter of the feeds being in update.</li>
              <li>You can now export a feed to XML file</li>
              <li>Added an option to show news bins in reduced feed list</li>
              <li>Added menu option to send item per mail</li>
</ul>
<h3 id="feedparsing">Feed parsing</h3>
<ul>
              <li>Default to https:// instead of http:// when user doesn't
              provide protocol on subscribing feed</li>
              <li>Implement support for subscribing to LD+Json metadata
              listings e.g. concert or theater event listings</li>
              <li>Implement support for subscribing to HTML5 websites</li>
              <li>Support for media:description field of Youtube feeds</li>
              <li>Improve HTML5 extraction: extract main tag if it exists and no article was found.</li>
              <li>Execute feed pipe/filter commands asynchronously</li>
              <li>Better explanation of feed update errors.</li>
</ul>
<h3 id="onlineservices">Online services</h3>
<ul>
              <li>Added generic Google Reader API support (allows using FeedHQ, FreshRSS, Miniflux...)</li>
              <li>Now allow converting TinyTinyRSS subscriptions to local subscriptions</li>
</ul>
<h3 id="searchfolders">Search folders</h3>
<ul>
              <li>New search folder rule to match podcasts</li>
              <li>New search folder rule to match headline authors</li>
              <li>New search folder rule to match subscription source</li>
              <li>New search folder rule to match parent folder name</li>
              <li>New search folder property that allows hiding read items</li>
              <li>Now search folders are automatically rebuild when rules are changed</li>
</ul>
<h3 id="plugins">Plugins</h3>
<ul>
              <li>Added new plugin 'add-bookmark-site' that allows to configure a custom bookmarking site.</li>
              <li>Added new plugin 'getfocus' that adds transparency on the feed list when it is not focussed.</li>
              <li>Trayicon plugin has now a configuration option to change the behaviour when closing Liferea.</li>
              <li>Trayicon plugin has now an option to disable minimizing to tray</li>
</ul>
<h3 id="hotkeys">Hotkeys</h3>
<ul>
              <li>New hot key Ctrl-D for 'Open in External Browser'</li>
              <li>New hot key F10 for headerbar plugin to allow triggering the hamburger menu</li>
              <li>New hot key Ctrl-0 to reset zoom</li>
              <li>New hot key Ctrl-O to open enclosures</li>
</ul>
<h2 id="importantbugfixes">Important bugfixes</h2>
<ul>
<li><p>Fixing hidden panes:
Many Liferea users did suffer from invisible pane (e.g. a minimized feed list
or HTML view) upon startup. With certain desktop environments / themes making
the pane grips invisible it is hard to grip the correct pixel to restore a pane.</p>
<p>Now Liferea will never allow the panes to be smaller than 5% in height or width
regarding to there orientation. If a pane is smaller than 5% height/width it will be
set to 30% width or 50% height on startup.</p>
<p>The intention here is that panes are never invisible after startup.</p></li>
<li><p>Wait for network to be fully available before updating: sometimes when real internet
access takes longer to come up then your WLAN connection Liferea did update feeds to
early resulting in errors. Now Liferea waits for full internet connection.</p></li>
</ul>
<h2 id="deprecations">Deprecations</h2>
<ul>
  <li>2-pane mode was removed</li>
  <li>Dropped CDF channel support</li>
  <li>Dropped Atom 0.2/0.3 (aka Pie) support</li>
  <li>Dropped blogChannel namespace support</li>
  <li>Dropped photo namespace support</li>
</ul>
<h2 id="download">Download</h2>
<p>Get Liferea from https://github.com/lwindolf/liferea/releases/tag/v1.14.0</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.14 RC3 released]]></title>
            <link>https://lzone.de/liferea/blog/2022-12-17-Liferea 1.14-RC3 released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.14%20RC3%20released</guid>
            <pubDate>Sat, 17 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a new release candidate for 1.14. It contains many bugfixes and translation
updates. This will be the last release candidate. Next release will be 1.14.0.</p>
<h2 id="changes">Changes</h2>
<pre><code>* Patch #1184: Solving Webkit proxy method deprecations
  (Matthew Horan)

* Fixes #1182: Periodic crash when navigating items (TheOldReader)
  (reported by Matthew Horan)

* Fixes #1176: Custom liferea.css no longer working
  (Matthew Horan)

* Fixes #1174: Missing date for some feeds
  (reported by jfbauer432)

* Fixes #1170: broken notification icon in libnotify plugin
  (Tasos Sahanidis)

* Fixes #1162: a sting impossible to translation
  (Paweł Marciniak)

* Fixes #1124: Formation vanishes after a few seconds
  (reported by Michael F. Schönitzer)

* Fixes #1121: Wait for network to be fully available before updating
  (reported by Jeff Fortin)

* Update of Albanian trasnlation (Besnik Bleta)
* Update of Brazilian-Portugese translation (Alexandre Erwin Ittner)
* Update of Chinese translation (David Yang)
* Update of German translation (Lars Windolf)
* Update of Polish translation (Paweł Marciniak)
* Update of Russian trasnlation (mbrav)
* Update of Spanish translation (Christian Martinez)
</code></pre>
<h2 id="download">Download</h2>
<p>Get Liferea from https://github.com/lwindolf/liferea/releases/tag/v1.14-RC3</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.14 RC2 released]]></title>
            <link>https://lzone.de/liferea/blog/2022-10-24-Liferea 1.14-RC2 released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.14%20RC2%20released</guid>
            <pubDate>Mon, 24 Oct 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is the second release candidate for the next stable release line 1.14. There
will be probably one more release candidates until 1.14.0.</p>
<p>Focus on this release was closing some long standing bugs. There is also a new
plugin <code>add-bookmark-site</code> to allow providing a user define bookmarking site.</p>
<h2 id="callfortranslations">Call for translations!</h2>
<p>If you are a translator please consider updating your Liferea translation. Here is a list
of the current translation status by language. Note the respective amount of fuzzy and
untranslated messages.</p>
<pre><code>ar.po 375 translated messages, 61 fuzzy translations, 102 untranslated messages.
ast.po 338 translated messages, 84 fuzzy translations, 116 untranslated messages.
be@latin.po 242 translated messages, 152 fuzzy translations, 144 untranslated messages.
bg.po 143 translated messages, 201 fuzzy translations, 194 untranslated messages.
ca.po 369 translated messages, 73 fuzzy translations, 96 untranslated messages.
cs.po 447 translated messages, 46 fuzzy translations, 45 untranslated messages.
da.po 370 translated messages, 71 fuzzy translations, 97 untranslated messages.
de.po 512 translated messages, 12 fuzzy translations, 14 untranslated messages.
el.po 238 translated messages, 147 fuzzy translations, 153 untranslated messages.
en_GB.po 5 translated messages, 533 untranslated messages.
es.po 408 translated messages, 55 fuzzy translations, 75 untranslated messages.
eu.po 370 translated messages, 74 fuzzy translations, 94 untranslated messages.
fi.po 401 translated messages, 60 fuzzy translations, 77 untranslated messages.
fr.po 520 translated messages, 12 fuzzy translations, 6 untranslated messages.
gl.po 312 translated messages, 105 fuzzy translations, 121 untranslated messages.
he.po 394 translated messages, 57 fuzzy translations, 87 untranslated messages.
hu.po 509 translated messages, 16 fuzzy translations, 13 untranslated messages.
id.po 437 translated messages, 39 fuzzy translations, 62 untranslated messages.
it.po 509 translated messages, 17 fuzzy translations, 12 untranslated messages.
ja.po 384 translated messages, 55 fuzzy translations, 99 untranslated messages.
ko.po 138 translated messages, 210 fuzzy translations, 190 untranslated messages.
lt.po 282 translated messages, 91 fuzzy translations, 165 untranslated messages.
lv.po 372 translated messages, 71 fuzzy translations, 95 untranslated messages.
mk.po 99 translated messages, 214 fuzzy translations, 225 untranslated messages.
nl.po 520 translated messages, 12 fuzzy translations, 6 untranslated messages.
pl.po 508 translated messages, 17 fuzzy translations, 13 untranslated messages.
pt_BR.po 537 translated messages, 1 fuzzy translation.
pt.po 312 translated messages, 105 fuzzy translations, 121 untranslated messages.
ro.po 316 translated messages, 104 fuzzy translations, 118 untranslated messages.
ru.po 377 translated messages, 66 fuzzy translations, 95 untranslated messages.
sk.po 312 translated messages, 104 fuzzy translations, 122 untranslated messages.
sq.po 507 translated messages, 18 fuzzy translations, 13 untranslated messages.
sv.po 402 translated messages, 56 fuzzy translations, 80 untranslated messages.
tr.po 410 translated messages, 56 fuzzy translations, 72 untranslated messages.
uk.po 403 translated messages, 56 fuzzy translations, 79 untranslated messages.
vi.po 403 translated messages, 56 fuzzy translations, 79 untranslated messages.
zh_CN.po 342 translated messages, 86 fuzzy translations, 110 untranslated messages.
zh_TW.po 133 translated messages, 199 fuzzy translations, 206 untranslated messages.
</code></pre>
<p>Please help updating translations for Liferea!</p>
<h2 id="changes">Changes</h2>
<pre><code>    * #1152: Reduces height of the status bar to save vertical space.
      (Lars Windolf)

    * #1070: Added new plugin 'add-bookmark-site' that allows to configure
      a custom bookmarking site.
      (Lars Windolf)

    * Fixes #1155: Toolbar/menu actions disabling wrong for search
      folders/folders
      (Lars Windolf)

    * Fixes #1154: Search folder property "Hide read items" has wrong
      initial state when opening dialog
      (Lars Windolf)

    * Fixes #1100: Dates are overwritten on every update for feeds
      that do not provide date information.
      (Lars Windolf)

    * Fixes #923: Reading folders with unread filtering active often
      has remnant read items
      (Lars Windolf)

    * Fixes #723: LiveJournal feeds parsing can make the headline link
      a link to an XML document. Liferea now checks for the line MIME type.
      (Lars Windolf)

    * Fixes #720: Mark all as read doesn't clear Unread folder if one entry is selected
      (Lars Windolf)

    * Fixes #501: Fixes segfault when deleting a search folder that is rebuilding
      (Lars Windolf)

    * Updated pr-BR translation (Alexandre Erwin Ittner)
</code></pre>
<h2 id="download">Download</h2>
<p>Get Liferea from https://github.com/lwindolf/liferea/releases/tag/v1.14-RC2</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.14 RC1 Released]]></title>
            <link>https://lzone.de/liferea/blog/2022-10-10-Liferea 1.14-RC1 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.14%20RC1%20Released</guid>
            <pubDate>Mon, 10 Oct 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is the first release candidate for the next stable release line 1.14. There
will be probably 2 more release candidates until 1.14.0.</p>
<h2 id="fixinghiddenpanes">Fixing hidden panes</h2>
<p>Many Liferea users did suffer from invisible pane (e.g. a minimized feed list
or HTML view) upon startup. With certain desktop environments / themes making
the pane grips invisible it is hard to grip the correct pixel to restore a pane.</p>
<p>Now Liferea will never allow the panes to be smaller than 5% in height or width
regarding to there orientation. If a pane is smaller than 5% height/width it will be 
set to 30% width or 50% height on startup.</p>
<p>The intention here is that panes are <strong>never</strong> invisible after startup. </p>
<h2 id="lastminutefeatures">Last minute features</h2>
<p>This release brings some small last minutes features</p>
<ul>
<li><p>Liferea now supports the new GTK dark theme logic, where in the preferences
you define wether you "prefer" dark mode or light mode.</p></li>
<li><p>New search folder rule to match podcasts</p></li>
<li><p>New search folder rule to match headline authors</p></li>
<li><p>Support for <media:description> field of Youtube feeds</p></li>
</ul>
<h2 id="changes">Changes</h2>
<pre><code>    * Liferea now supports gtk-application-prefer-dark-theme based
      dark mode switching.
      (Lars Windolf, Alexander Erwin Ittner)

    * #1148: Add search rule to find items from a given author.
      (Alexander Erwin Ittner)

    * #1147: Exported OPML feed lists are now UTF-8 encoded for better readability.
      (Alexander Erwin Ittner)

    * #1145: Render &lt;media:description&gt; field for Youtube feeds
      (Lars Windolf)

    * #1143: Updated default feed sources (HTTP-&gt;HTTPS)
      (Alexander Erwin Ittner)

    * #1133: Added new "podcast" search folder rule.
      (Alexander Erwin Ittner)

    * #1139: Also add enclosures when saving items to file.
      (Alexander Erwin Ittner)

    * Fixes #1132: Improved timeout error handling in feed commands
      (Alexander Erwin Ittner)

    * Fixes #1129: Accessibility errors in .ui files
      (reported by Paul Gevers)

    * Fixes #1126: Some images broken in reader mode
      (reported by Saijin-Naib)

    * Fixes #901, #1123: resize view panes to sensible positions
      when they were at min or max position on last shutdown. Makes
      left pane 30% window width and item list pane 50% height/width
      when pane position is 0 or 95% of height/width. (Lars Windolf)

    * Fixes #992: HTML with self-closing tags not rendering properly.
      (Rich Coe)

    * Fixes #644, #901, #909: restoring window size/position with header
      bar plugin active. (Lars Windolf)

    * #1137: Updated French translation (Guillaume Bernard)

    * #1134, #1135: Updated Spanish example feeds (Joel Barrios)
</code></pre>
<h2 id="download">Download</h2>
<p>Get Liferea from https://github.com/lwindolf/liferea/releases/tag/v1.14-RC1</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Blank browser view with Mesa 22]]></title>
            <link>https://lzone.de/liferea/blog/2022-09-16-Blank browser view with Mesa 22</link>
            <guid>https://lzone.de/liferea/blog/Blank%20browser%20view%20with%20Mesa%2022</guid>
            <pubDate>Fri, 16 Sep 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>When you upgrade to Mesa 22 and run on an Intel Iris graphic card you 
can run into a bug that suddenly no headline content is rendered anymore.
This bug seems to be in WebkitGtk 4.0 up to 2.36: <a href="https://bugs.webkit.org/show_bug.cgi?id=238513">https://bugs.webkit.org/show_bug.cgi?id=238513</a> 
and probably will be solved in an upcoming WebkitGtk release.</p>
<h2 id="workaround">Workaround</h2>
<p>As a workaround set the environment variable <code>WEBKIT_DISABLE_COMPOSITING_MODE=1</code>
e.g. in your <code>~/.profile</code>. Alternatively downgrade Mesa.</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.13.9 Released]]></title>
            <link>https://lzone.de/liferea/blog/2022-07-25-Liferea 1.13.9 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.13.9%20Released</guid>
            <pubDate>Mon, 25 Jul 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Here comes a new development release in the 1.13 line.</p>
<p>This will be the last unstable release before the first 1.14 release candidate. It contains
bugfixes and a generalization of the Google Reader API implementation we already had
for TheOldReader. This implementation was improved, fixing some bugs and can now
be used with arbitrary Google Reader services.</p>
<h2 id="newfeaturegooglereaderapisupport">New feature: Google Reader API support</h2>
<p>If you are a FeedHQ, FreshRSS, Basquz user or a a user of any other Google Reader 
compatible service, you can now subscribe to those services.</p>
<p>Note: it currently doesn't work with Miniflux due to this <a href="https://github.com/miniflux/v2/issues/1498">https://github.com/miniflux/v2/issues/1498</a>
which is probably a bug in Miniflux. Once it is solved Miniflux also can be used.</p>
<p>If you experience any issues please open a ticket for support!</p>
<h2 id="guisimplificationlesscluttereditemlist">GUI simplification: less cluttered item list</h2>
<p>The item list has seen some rework. The quite large left padding (cause by reserved space
for expansion header) is now gone. Also the enclosures icon column was dropped. When 
using Liferea in wide mode this really gives back a lot of vertical space, so Liferea in wide mode
becomes more useful half-maximized or in split screen situations.</p>
<p>Please give feedback how you like the change, especially the rather small padding left of the
favicon column (when in wide mode)!</p>
<h2 id="changes">Changes</h2>
<pre><code>    * Update to Readability.js 0.41 (better image and table handling)
      (Lars Windolf)

    * Changes to UserAgent handling: same UA is now used for both feed fetching
      and internal browsing. User agent now indicates Android+Mobile per default
      instead of suggesting a Linux desktop to better adapt to the smaller
      (in comparison to browsers) rendering pane. Additionally special env
      vars LIFEREA_UA and LIFEREA_UA_ANONYMOUS now also affect the internal
      browsing.

    * Improve HTML5 extraction: extract &lt;main&gt; if it exists and no article
      was found.

    * #1117: Hide unused expander space in item list. This saves horizontal
      space. (Sefler Zhou)

    * Drop enclosure icon from item list. This saves horizontal space.
      (Lars Windolf)

    * #515, #962, #1113 adds generic Google Reader API support
      (this enables access to FeedHQ, FreshRSS, Miniflux...)

    * #1108, #113: Improve performance by different check order in itemset
      merging (suggested by mozbugbox)

    * Fixes #1033: Subscribing defaulted to HTML5 feeds even when real
      feeds do exist. (reported by Hanno Braun)

    * Fixes #1111: wrong base URI in reader mode
      (Lars Windolf)

    * Fixes #1112: Image duplication caused by feeds providing an image
      link which is also in the item description as additional metadata.
      (Lars Windolf)

    * Update of Dutch translation (Gert-dev)
</code></pre>
<h2 id="download">Download</h2>
<p>Get Liferea from https://github.com/lwindolf/liferea/releases/tag/v1.13.9</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.13.8 Released]]></title>
            <link>https://lzone.de/liferea/blog/2022-04-05-Liferea 1.13.8 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.13.8%20Released</guid>
            <pubDate>Tue, 05 Apr 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Here comes a new development release in the 1.13 line.</p>
<p>As with the previous releases there were again many contributions which make working
on Liferea a lot of fun. Special thanks to Matthew Horan for the multitude of contributions 
in this release!</p>
<h2 id="continuedworkonreadermode">Continued work on 'Reader Mode'</h2>
<p>It contains further work on the new "Reader Mode" feature. While the feature is not yet complete
it is much more useful now. "Reader mode" is now more consistent to the global preference and
can be consistently ad-hoc toggled via the browser content menu. It now uses the same styling
as the headline view does.</p>
<p>What's still missing for the feature:</p>
<ul>
<li>maybe a per-feed subscription</li>
<li>good fallback when it fails (e.g. auto-redirect to normal website and/or a good error message)</li>
</ul>
<h2 id="theoldreaderimprovements">TheOldReader improvements</h2>
<p>For TheOldReader support for synchronizing title changes and folder changes was implemented.
There is also a bugfix to prevent that deleted feeds would reappear later.</p>
<h2 id="releasecandidateforv114">Release Candidate for v1.14</h2>
<p>Given the progress so far, after one or two more 1.13 releases we will probably see a 1.14 release candidate.
Until then some issues with 'Reader Mode' and HTML5 feeds have to be ironed out…</p>
<h2 id="changes">Changes</h2>
<p>Here is the detailed list of changes:</p>
<pre><code>* #1103: New hot key Ctrl-D for 'Open in External Browser' 
  (David Yang)

* #1101: Reader mode for internal browser: is now applied on prefetched HTML
  document instead of applying after normal rendering. Which means it
  is more secure and much faster. (Lars Windolf)

* #1097: Reader mode for internal browser: shows now standard decorations
  like in headline view. (Lars Windolf)

* #1095: New feature: Export items to feed file
  (Alexandre Erwin Ittner)

* #1078, #1081, #1082: Make several plugins XDG path aware
  (Paweł Marciniak)

* #1071: Various fixes and feature enhancements for TheOldReader sources
  Sync titles, sync folder changes, fix removal consistency
  (Matthew Horan)

* #1061: Faster and safer generation of localized filenames
  (Lorenzo Ancora)

* #1052: Allow building with libpango &lt; 1.43.0 (Ubuntu 18.04)
  (Alexandre Erwin Ittner)

* #778: New preference: deferred removal of read items from folders and
  search folders. (Rich Coe)

* Fixes #1094: Fix Next Unread Item crash when no feed selected
  (Matthew Horan)

* Fixes #1092: --debug-html seems broken
  (Matthew Horan)

* Fixes #1073: Memory leak in stylesheet reloading
  (Matthew Horan)

* Fixes #1069: Don't update HTML view when browsing internally
  (Matthew Horan)

* Fixes #1064: Fix strsep implicit declaration warning
  (Paweł Marciniak)

* Fixes #1058: Italian manpage installation
  (Paweł Marciniak)

* Fixes #1053: Use liferea_shell_show_window() when activating
  This shold fix an issue where position is not restored on XOrg when
  Liferea is trigger from Cinnamon launcher (instead of tray)
  (Matthew Horan)

* Fixes #1066: Browse to requested URI on JS window creation (this
  prevents loading empty tabs on weird JS links some sites/feeds have)
  (Matthew Horan)

* #1095: Updated of French translation
  (sblondon)

* #1043: Added Italian documentation translation
  (Lorenzo Ancora)
</code></pre>
<h2 id="download">Download</h2>
<p>Get Liferea from https://github.com/lwindolf/liferea/releases/tag/v1.13.8</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.13.7 Released]]></title>
            <link>https://lzone.de/liferea/blog/2021-12-06-Liferea 1.13.7 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.13.7%20Released</guid>
            <pubDate>Mon, 06 Dec 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a new development release mostly focusing on usability. Thanks for the many many contributions!</p>
<p>With this release the work on Reader mode continued. It can be used in the internal browser and be easily toggled from the HTML view context menu. Proper styling is planned for the next release.</p>
<p>This release also includes several important bugfixes:</p>
<ul>
<li>Fixes HTML view blanking when following links by left click</li>
<li>Fixes UI blocking when using command pipes or feed filters</li>
<li>Fixes truncated content after Youtube embeds</li>
<li>Fixes wrong (doubled) number of unread items</li>
</ul>
<p>There are many more changes, here is the complete list</p>
<pre><code>* Allow converting TinyTinyRSS subscriptions to local subscriptions
  (Lars Windolf)

* #1045: Further integration of Reader mode with internal browser
  (Matthew Moran)

* #1044: Support for user-agent string customization and anonymization
  (Lorenzo Ancora)

* #1037: Fix deprecation of g_time_zone_new
  (sunwire)

* #1027: Add option to show news bins in reduced feed list
  (Alexandre Erwin Ittner)

* #1023: Execute feed pipe/filter commands asynchronously
  (Alexandre Erwin Ittner)

* #1018: Fix deprecation of pango_find_base_dir
  (sunwire)

* #1017: Fix deprecation of g_memdup
  (sunwire)

* #1016: Type casting to silence compiler warnings
  (sunwire)

* #1014: Fixes some compiler warnings
  (sunwire)

* #947: Rework of Reader mode feature toggling: toggle is now a context
  menu toggle of the HTML view context menu.

* Fixes #1013: Certificate problems with some URLs
  (sunwire)

* Fixes 1005: aria2 download manager triggered by wrong command
  (zorlaski)

* Fixes #981: Left-clicking an external link in the headline view caused the
  Javascript disabled setting to be ignored.
  (Lars Windolf)

* Fixes #993: Duplicate registration of libsoup content decoder
  (Yanko Kaneti)

* Fixes #955: Blog post truncated after a YouTube embed
  (reported by Jeff Fortin, fix by Rich Coe)

* Fixes #952: Number of unread items is 2 times the correct number
  (reported by GaryGate15)

* Fixes #950: Multiple license issues:
  - several header files with LGPLv2+ license -&gt; fixed to GPLv2+
  - several plugins with outdated LGPLv2+ -&gt; updated to LGPLv3+
  - missing LGPL license file COPYING.LIB -&gt; added
  (reported by Paul Gevers)

* #1040: Updated all documentation for WCAG and HTML5 semantics
  improves accessibility for screen readers
  (Lorenzo Ancora)

* #1049: Update and extend man page
  (Lorenzo Ancora)

* #477: Updated documentation for enclosure download
  (Lars Windolf)

* Updated documentation for preference dialog
  (Lars Windolf)

* Added Italian documentation translation
  (Lorenzo Ancora)

* Updated Brazilian Portuguese translation
  (Fúlvio Alves)

* Updated Czech translation
  (RadimNo)

* Updated Hungarian translation
  (Balázs Úr)

* Updated Polish translation
  (sunwire)

* Updated Simplified Chinese translation
  (Sefler Zhou)
</code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[Recent WebKitGTK HTML renderer instabilities]]></title>
            <link>https://lzone.de/liferea/blog/2021-06-09-Recent WebKitGTK HTML renderer instabilities</link>
            <guid>https://lzone.de/liferea/blog/Recent%20WebKitGTK%20HTML%20renderer%20instabilities</guid>
            <pubDate>Wed, 09 Jun 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>In recent weeks there are more issues with the WebKitGTK HTML renderer
widget used by Liferea. Here is some insight on these problems and if you
are impacted how to workaround…</p>
<h2 id="1brokenmissingcss">1. Broken/missing CSS</h2>
<p>When you upgrade your install WebkitGTK library to version 2.32 or newer
CSS decorations in Liferea will vanish. This is due to new and more strict
security settings of Webkit.</p>
<p>CSS styles are properly applied again starting with Liferea 1.13.5.</p>
<p><strong>Impact</strong>: Happens to all users once upgrading to WebKitGTK 2.23+</p>
<p><strong>Workaround:</strong> Upgrade to Liferea 1.13.5 or downgrade WebKitGTK</p>
<h2 id="2crashesflickeringuponvideoplayback">2. Crashes/flickering upon video playback</h2>
<p>It seems that the Webkit rendering process dies if the gstreamer library
crashes in background. When this happens you see the HTML widget go blank
or sometimes do flicker for 2-3 seconds before going blank. In all those case
a video playback was started, which often is an video auto-play of the visited
website and causes a crash in gstreamer.</p>
<p><strong>Impact:</strong> Affects not all users, quite rare</p>
<p><strong>Workaround:</strong> Disable Javascript in the preference to prevent automatic video playback.</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.13.6 Released]]></title>
            <link>https://lzone.de/liferea/blog/2021-05-07-Liferea 1.13.6 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.13.6%20Released</guid>
            <pubDate>Fri, 07 May 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a new development release mostly focusing on usability. Thanks for all the contributed bugfixes!</p>
<h2 id="changes">Changes</h2>
<pre><code>* Change reader mode toggle from item view icon to toggle entry in
  item view context menu.
  (Lars Windolf)

* #343: UX redesign of the update message in the status bar. Now shows a
  update counter of the feeds being in update.
  (Lars Windolf)

* #964: Added pane position fix plugin providing a workaround for pane position
  issues when using the headerbar
  (sunwire)

* #983: Use GtkFileChooserNative to allow selecting local files when
  run in sandbox.
  (Leiaz)

* Fixes #780: Improve date formatting when in locale en_GB
  (sunwire)

* Fixes #944: Broken RTL text direction in feed content view
  (Lars Windolf)

* Fixes #949: Regression in notification plugin that caused it to show
  non-new items
  (Lars Windolf)

* Fixes #963: Checking for git command in plugin installer -&gt; warn user
  (sunwire)

* Fixes #973: Broken CSS in Webkit2Gtk &gt;= 2.32
  (Leiaz)

* Updated Albanian translation
  (Besnik Bleta)

* Updated French translation
  (guilieb)

* Updated Italian translation
  (Janvitus)

* Updated German translation
  (Lars Windolf)
</code></pre>
<h2 id="download">Download</h2>
<p>Grab the tarball on the Github release page <a href="https://github.com/lwindolf/liferea/releases/tag/v1.13.6">https://github.com/lwindolf/liferea/releases/tag/v1.13.6</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.13.5 Released]]></title>
            <link>https://lzone.de/liferea/blog/2021-01-10-Liferea 1.13.5 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.13.5%20Released</guid>
            <pubDate>Sun, 10 Jan 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a new development release mostly focussing on usability. There is also a fix
of a long-standing bug that search folder searches were not case-insensitive as
documented.</p>
<h2 id="changes">Changes</h2>
<pre><code>    * #907: Add new search folder property that allows hiding read items
      (Lars Windolf, suggested by Jeff Fortin)

    * Now always shows the unread count of a search folder (instead of the
      item count) in the feed list
      (Lars Windolf)

    * Now search folders are automatically rebuild when rules are changed
      (Lars Windolf)

    * Adds a new simple focus plugin that adds transparency on the feed list
      when it is not focussed.
      (sunwire)

    * Add F10 hotkey to headerbar plugin to allow triggering the hamburger menu
      (sunwire)

    * Update Flatpak AppData with release dates
      (Mikel Olasagasti)

    * Make several plugins support gettext
      (sunwire)

    * Fixes #192: wrong button order of media player in RTL locales
      (patch by GreenLunar)

    * Fixes #343: Usability of update infos in status bar. Now a total
      count is displayed on mass-updates and a per-feed info on single
      feed updates
      (Lars Windolf)

    * Fixes #809: Usability of feed fetching errors.
      (Lars Windolf)

    * Updated Polish translation
      (sunwire)

    * Updated German translation
      (Lars Windolf)
</code></pre>
<h2 id="download">Download</h2>
<p>Grab the tarball on the Github release page <a href="https://github.com/lwindolf/liferea/releases/tag/v1.13.5">https://github.com/lwindolf/liferea/releases/tag/v1.13.5</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.13.4 Released]]></title>
            <link>https://lzone.de/liferea/blog/2020-12-24-Liferea 1.13.4 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.13.4%20Released</guid>
            <pubDate>Thu, 24 Dec 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>It's Christmas so let's have a small present for everyone. Here is a new unstable release.</p>
<p>There are some visual fixes concerning <a href="https://lzone.de/liferea/blog/Better-Favicons-Part-2">favicons</a> and fixing the blurry trayicon. Additionally many early testers of "reader mode" asked for ways to disable it. So there is now a global preference to disable it altogether and there is also a button to right top of the headline view to toggle it on demand while you read.</p>
<p>This release also fixes a longstanding bug where search folder rules where not case insensitive as intenteded. So you searches might not have found every hit they should have.</p>
<h2 id="changes">Changes</h2>
<pre><code>    * Prevent endless loop on favicon discovery
      (Lars Windolf)

    * #903: Prevent endless loop in feed autodiscovery
      (reported by Leiaz)

    * #912: Allow mutiple feed in same libnotify notification
      (Tasos Sahanidis)

    * Further favicon discovery improvements: now detects all types of
      Apple Touch Icons, MS Tile Images and Safari Mask Icons
      Fixes #440
      (Lars Windolf)

    * Add reader mode toggle in the item view
      (Lars Windolf)

    * #876 Add reader mode preference
      (Lars Windolf)

    * Implement support for subscribing to LD+Json metadata
      listings e.g. concert or theater event listings
      (Lars Windolf)

    * Provide the default icon for feeds with no favicon as SVG
      for nicer rendering in wide view. Drop some unused icons.
      Replace tray icon with scalable version.
      (Lars Windolf)

    * Fixes CRITICAL on trayicon plugin init
      (Lars Windolf)

    * Fixes #884: Content of wrong feed is shown
      (Leiaz, reported by Michael F. Schönitzer)

    * Fixes #900: Flatpak needs icon named after appid
      (Mikel Olasagasti)

    * Fixes #908, #332: Search folder are not case-insensitive as documented
      (reported by Heinz Peter Hippenstiel and Jeff Fortin)

    * Fixes #899: Truncated articles (on 'Extract full content')
      (reported by Leiaz)

    * #902: Updated Polish translation
      (sunwire)
</code></pre>
<h2 id="download">Download</h2>
<p>Grab the tarball on the Github release page <a href="https://github.com/lwindolf/liferea/releases/tag/v1.13.4">https://github.com/lwindolf/liferea/releases/tag/v1.13.4</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[Better Favicons Part 2]]></title>
            <link>https://lzone.de/liferea/blog/2020-12-01-Better-Favicons-Part-2</link>
            <guid>https://lzone.de/liferea/blog/Better%20Favicons%20Part%202</guid>
            <pubDate>Tue, 01 Dec 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a followup to the post <a href="Better-Favicons-Part-1">Better Favicons Part 1</a>. While the
change from April this year was about storing all favicons in a large resolution, to ensure
there is no upscaling when presented in 'Wide View', this is about finding better quality favicons
as used by iOS, Android and Microsoft Windows.</p>
<p>What was missing so far was a smart way of finding the best website icon each website presents.
A new and significantly more sophisticated logic for discovering icons has now been implemented.</p>
<h2 id="newfavicondiscovery">New Favicon Discovery</h2>
<p>So how do we find icons?</p>
<p>Liferea will now <a href="https://github.com/lwindolf/liferea/commit/b7c29aa1fa1e50ee3fcb4c39771e3c5ddcaff171#">perform</a> the following lookup strategy:</p>
<h3 id="1findhighresicon">1. Find "high-res" icon</h3>
<ol>
<li>Look for <code>&lt;link rel='icon' href='...' sizes='...'&gt;</code> favicons with a reasonable size (&gt;128px)</li>
<li>Look for <code>&lt;link rel='apple-touch-icon' href='...' sizes='...'&gt;</code> Apple touch icons with a mimimum size of 120px</li>
<li>Look for <code>&lt;meta name='msapplication-TileImage' content='...'&gt;</code> Microsoft tile images which we always expect to be large enough</li>
<li>Look for <code>&lt;link rel='mask-icon' href='...'&gt;</code> Safari mask icons</li>
</ol>
<h3 id="2findprobablysuitableicon">2. Find probably suitable icon</h3>
<ol start="5">
<li>Look for size-less Apple touch icon which is expected to be 180px</li>
<li>Look for any favicons with size definition (&lt;128px)</li>
<li>Look for any Apple touch icons (&lt;128px)</li>
</ol>
<h3 id="3fallback">3. Fallback</h3>
<ol start="8">
<li>Use the small size standard favicon (which by standard is never larger than 48px)</li>
</ol>
<p>All of the icons locations are tried for download in the given order and the first icon download
that works is the winner! There are some simplifications though:</p>
<ul>
<li><p>The code doesn't support the browserconfig.xml standard by Microsoft where 
one can fetch more details on tile images to select more suitable locations.</p></li>
<li><p>The code doesn't change the user agent to Safari/Android to discover favicons.
There are websites out there that announce the proper icons only for specific
user agents. And some of those sites have only a 16x16px icon for the web (e.g.
Slashdot), for those sites the favicon discovery fails.</p>
<p>Switching the user agent only for the favicon download (e.g. to Safari/Android)
is hard to do as GNOME networking library libsoup treats the user agent as a 
session property. Also ad-hoc switching user agents without the user knowing is surely
bad style.</p></li>
</ul>
<h2 id="exampleiconsin1133">Example Icons in 1.13.3</h2>
<p>Let's take a random set of icons as downloaded by the last release:</p>
<p><img src="assets/favicons-improve2-old.png" alt="example icons as downloaded with 1.13.3" /></p>
<h2 id="improvediconswith1134">Improved Icons with 1.13.4</h2>
<p>Below you find the improvements in this release. </p>
<p><img src="assets/favicons-improve2-new.png" alt="example icons as downloaded with the improved code" /></p>
<p>While it maybe not very easy to spot 8 out of the 28 example icons now have an improved resolution.</p>
<p>Out of the remaining 8 blurry icons all of them are not provided at a higher resolution
by the website they belong to. If you have such a feed and want to check wether its
website supports better favicons you can try a SEO favicon checker like <a href="https://realfavicongenerator.net/favicon_checker">https://realfavicongenerator.net/favicon_checker</a>.</p>]]></description>
        </item>
        <item>
            <title><![CDATA[The perfect headerbar]]></title>
            <link>https://lzone.de/liferea/blog/2020-10-18-The perfect headerbar</link>
            <guid>https://lzone.de/liferea/blog/The%20perfect%20headerbar</guid>
            <pubDate>Sun, 18 Oct 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[<h2 id="statusoftheheaderbarplugin">Status of the headerbar plugin</h2>
<p>All through the 1.12 release line we had a headerbar plugin that allowed you to
switch from using classic menubar/toolbar to a headerbar. While not everyone likes
the headerbar (and it's obligatory "hamburger" menu) it is undisputable that it saves
precious vertical space, is touch friendly and can prominently put the most important
actions as buttons or search fields.</p>
<p>With 1.13 it is probably time to drop menubar/toolbar in favour of a headerbar only
layout. If you feel strongly against this please leave a comment, so far quite a lot
of Liferea users did choose to enable the headerbar.</p>
<h2 id="currentuxdesignproblemenabledisablereadermode">Current UX design problem: enable/disable 'Reader Mode'</h2>
<p>I believe one of the most important features in 1.13 is the so called 'Reader Mode'
that you might know from your favourite browser. Pioneered by Opera, nowadays Chrome, 
Firefox, Edge and others all support clicking a document icon (usually appearing to the right
inside the URL entry) to switch to an visually uncluttered content view optimal for reading.</p>
<p>Liferea 1.13 also introduces this feature to be used together with the HTML5 extraction
feature where website contents are directly extracted to provide more content for your
headlines. As this also extracts a lot of page structure that might cause wierd vertical
empty spaces, useless bullet lists without any content, awefully broken social media 
buttons, and so on… it is good to have 'Reader Mode' (powered by Readability.js) to
strip them.</p>
<p>But due the <em>heuristics nature</em> of Readability.js sometimes small pieces of content
might be deemed as non-content and end up being stripped. To ensure you are in
control the 'Reader Mode' needs a UI element enabling/disabling it.</p>
<h2 id="possibleuisolutions">Possible UI solutions</h2>
<p>Leaving aside wether 'Reader Mode' should be Opt-In or Opt-Out we do we place the button?</p>
<p>The following place inside Liferea come to mind</p>
<ol>
<li>Inside the HTML rendering of the headline (some inline Javascript link)
probably near the title</li>
<li>A new button in the header bar (to the right, so it is above the headline)</li>
<li>In an extra menu bar above the headline (which we do not have yet)</li>
<li>As with major browsers inside some type of URL entry field (which we do not have yet)</li>
</ol>
<p>First let's summarize some obvious problems</p>
<ul>
<li>Option #3 and #4 waste extra vertical space, which is precious</li>
<li>Option #2 will cause visual disturbance when switching between feeds
(especially when reading when selecting a folder, as different headlines
will have different 'Reader Mode' state and cause a button state change)</li>
<li>Option #1 introduces a settings element inside the content view, which 
introduces visual clutter and might balance badly against the favicon</li>
</ul>
<p>Thinking about why the delayed appearance of the reader mode icon in web browsers doesn't disturb 
me I guess it is because typical web browser eye focus is to the left upper corner of the HTML view
while the icon is far to the right in the URL bar, so it appearing doesn't disturb focus.</p>
<p>This is different in Liferea with it content focus being in the second half of the window with+
the 'Reader Mode' indicator right above it.</p>
<h2 id="optinalternatives">Opt-In Alternatives</h2>
<p>Given the above disadvantages: what about not having a GUI element but an Opt-In property? Opt-In
could happen in two places</p>
<ol>
<li>Global preferences: Check box to have 'Reader Mode' on/off for all HTML5 extraction headlines</li>
<li>Per-feed property: Check box to have 'Reader Mode' on/off for this feed online</li>
</ol>
<h2 id="whatdoyouthink">What do you think?</h2>
<p>I'm currently not sure how to go about this, so please leave comments (Disqus) about what would be your choice
or any alternatives this post has not covered!</p>
<p>Thanks a lot!</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.13.3 Released]]></title>
            <link>https://lzone.de/liferea/blog/2020-10-10-Liferea 1.13.3 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.13.3%20Released</guid>
            <pubDate>Sat, 10 Oct 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a new 1.13 development release with a lot of great improvements including zoom reset using Ctrl-0, enabling Webkit Intelligent Tracking Protection, CSS color updated on theme switch, progress bar support when loading web pages and many other improvements.</p>
<p>Thanks for the many contributions!!!</p>
<h2 id="hacktoberfestparticipation">Hacktoberfest Participation</h2>
<p>Please note that Liferea has the #hacktoberfest tag set, so if you participate in DigitalOceans <a href="https://hacktoberfest.digitalocean.com/">Hacktoberfest</a> your pull requests will count!</p>
<p>With roughly three weeks more of the month have a look in the issue tracker for "help-wanted" and "easy-to-fix" labels!</p>
<h2 id="deprecations">Deprecations</h2>
<p>Feature cleanups continue. With this release we drop </p>
<ul>
<li>CDF channel support (a very old and rare Microsoft RSS alternative)</li>
<li>PIE aka. Atom 0.2/0.3 support</li>
<li>RSS namespace "blogChannel" support</li>
</ul>
<p>While I'm sorry to see blogChannel support gone, with Userland gone, there is just no one out there using it anymore.
It was a nice feature everyone sharing the subscription list explicitely…</p>
<h2 id="changes">Changes</h2>
<pre><code>   * #893: Update of bookmarking sites
      (Mikel Olasagasti)

    * #888: Changes required for Flathub
      (Mikel Olasagasti)

    * #882: Implement support for Webkits Intelligent Tracking Protection
      (Leiaz)

    * #875: Add &lt;Ctrl&gt;-0 hotkey to reset zoom
      (Leiaz)

    * #874: Add debug printing of SAX parser errors
      (Leiaz)

    * #846: Remove deprecated usage of gdk_screen_*
      (ghost)

    * #844: Update metainfo path (appdata target directory)
      (Yuri Konotopov)

    * #776: CSS color update on theme change without restart
      (sillyslux)

    * Fixes #883: Feed with comments: last comment replaces all content
      (Leiaz)

    * Fixes #866: Bad encoding in doc/html/reference_de.html
      (reported by Paul Gevers)

    * Fixes #865: Fixes view mode switch
      (Leiaz)

    * Fixes #841: Now shows progress bar when loading websites
      (Leiaz)

    * Fixes #828: Crashing with segfault after opening feed articles
      (chronoscz)

    * Fixes XLST exception on mediarss feeds with description
      (Lars Windolf)

    * Drop blogChannel namespace support
      (Lars Windolf)

    * Support multi-feed discovery
      (Lars Windolf)

    * Default to https:// instead of http:// when user doesn't
      provide protocol on subscribing feed
      (Lars Windolf)

    * Drop CDF channel legacy support
      (Lars Windolf)

    * Drop Atom 0.2/0.3 (aka Pie) legacy support
      (Lars Windolf)

    * #893: Added Persion default feed list
      (Kevin Scruff)

    * #890: Update of Indionesian translation
      (Samsul Ma'arif)

    * #890: Update of French translation
      (Yannick A.)
</code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.13.2 Released]]></title>
            <link>https://lzone.de/liferea/blog/2020-08-29-Liferea 1.13.2 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.13.2%20Released</guid>
            <pubDate>Sat, 29 Aug 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a new development release adding a new major feature "Reader mode".
"Reader mode" is always on filtering all feed content and HTML5 enriched content
to remove ads, visual noise and any left-over website navigation elements that
might end up in your feeds content.</p>
<p>Please test the feature and give feedback on your experiences!</p>
<p>Additionally Youtube videos from MediaRSS feeds are now automatically
rendered and there are two new powerful search folder rules available to match
parent folder and subscription URL.</p>
<h2 id="featuredeprecations">Feature Deprecations</h2>
<h3 id="combinedview">Combined View</h3>
<p>1.13 will drop the combined view aka 2-pane view mode. The feature was not
maintained well, did not provide the same functionality as the 3-pane modes and
did not scale well. Removing it will significantly simplify the code base and allows
to implement "Reader mode" for the now single-item/single-document only views. </p>
<h3 id="photonamespace">"photo" namespace</h3>
<p>The rarely seen photo namespace support has been dropped to simplify the 
rendering templates.</p>
<h3 id="disablingjsininternalbrowser">Disabling JS in internal browser</h3>
<p>To allow for "Reader mode" which (using Readability.js) is Javascript based
we now cannot disable Javascript in the item view anymore. The global preference
for disabling Javascript has been renamed to indicate that it only affects loading
websites in the internal browser.</p>
<h2 id="changes">Changes</h2>
<pre><code>    * #846, #864, #735: Fix main menu/toolbar not being translated
      (reported by nesfla, Qik000, SingleMalt2104)

    * #854: Adding new search folder options to match
      subscription source URL and parent folder name.
      (suggested by muhlinux)

    * #851: Add accessibility check to code tests
      (Lars Windolf)

    * #851: Fix accessibility annotations for several combo boxes.
      (Lars Windolf)

    * #850: Fix embedded youtube video bug.
      (reported by sblondon)

    * #765: Embed YouTube videos from MediaRSS feeds
      (Mikel Olasagasti)

    * #749: Add Readability.js library (Apache 2.0 licensed)
      and auto-apply Readability.js to all headlines
      (Lars Windolf)

    * Drop unused glade/google_source.ui
      (Lars Windolf)

    * Drop support of combined view mode, this is necessary
      to add rich content support which relies on DOM
      transformation and Readability.js
      (Lars Windolf)

    * Drop ns_photo support, as it is rarely used and
      allows us to get rid of XSLT extra handling
      (Lars Windolf)

    * #747: Font improvements
      (Azhar Mithani)

    * #250 Update some dialog labels
      (GreenLunar)

    * #803: Fix legacy links to mailing list and IRC in
      documentation.
      (reported by Bill Dietrich)

    * Updated German translation
      (Lars Windolf)

    * #861: Updated Spanish translation
      (vosian)
</code></pre>
<h2 id="download">Download</h2>
<p>Grab the tarball on the Github release page <a href="https://github.com/lwindolf/liferea/releases/tag/v1.13.2">https://github.com/lwindolf/liferea/releases/tag/v1.13.2</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.12.9 Released]]></title>
            <link>https://lzone.de/liferea/blog/2020-08-28-Liferea 1.12.9 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.12.9%20Released</guid>
            <pubDate>Fri, 28 Aug 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a maintenance release fixing a translation bug and a Youtube video embedding issue.</p>
<h2 id="changes">Changes:</h2>
<pre><code>* #850: Fix embedded youtube video bug.
  (reported by sblondon)

* Fixes #846, #864: Translations not applied to application
  menu bar and tool bar.
  (Skif-off)
</code></pre>
<h2 id="download">Download</h2>
<p>Grab the tarball on the Github release page <a href="https://github.com/lwindolf/liferea/releases/tag/v1.12.9">https://github.com/lwindolf/liferea/releases/tag/v1.12.9</a></p>
<h2 id="sidenotes">Side-notes</h2>
<p>There is amazing work hidden in the quite simple typo fix of the bug reports #846, #864
done by Github user Skif-off. The actual fix being this patch:</p>
<pre><code>diff --git a/po/POTFILES.in b/po/POTFILES.in
index 74a065b1..27ce8291 100644
--- a/po/POTFILES.in
+++ b/po/POTFILES.in
@@ -189,8 +189,8 @@ plugins/headerbar.py
 [type: gettext/glade]glade/about.ui
 [type: gettext/glade]glade/auth.ui
 [type: gettext/glade]glade/enclosure_handler.ui
-[tyep: gettext/glade]glade/liferea_menu.ui
-[tyep: gettext/glade]glade/liferea_toolbar.ui
+[type: gettext/glade]glade/liferea_menu.ui
+[type: gettext/glade]glade/liferea_toolbar.ui
 [type: gettext/glade]glade/mainwindow.ui
 [type: gettext/glade]glade/mark_read_dialog.ui
 [type: gettext/glade]glade/new_folder.ui
</code></pre>
<p>To isolate the issue though Skif-off performed some serious permutation testing through
different versions / compilation mechanism and PO updating. Have a look at this analysis
table showing affected release tarballs depending on the way you compiled those!!!</p>
<pre><code>--------------------------------------------------------------
Ver.   | as is 1    | as is 2    | update-po 1 | update-po 2 |
-------|------------|------------|-------------|-------------|
1.12.0 | translated | translated | translated  | translated  |
1.12.1 | translated | translated | translated  | translated  |
1.12.2 | translated | translated | translated  | translated  |
1.12.3 | translated | translated | no          | no          |
1.12.4 | translated | translated | no          | no          |
1.12.5 | translated | translated | no          | no          |
1.12.6 | no         | translated | no          | no          |
1.12.7 | no         | no         | no          | no          |
1.12.8 | no         | no         | no          | no          |
1.13.0 | translated | translated | no          | no          |
1.13.1 | translated | translated | no          | no          |
master |            | translated |             | no          |
--------------------------------------------------------------
</code></pre>
<p>I won't go into details here (which you can read in the <a href="https://github.com/lwindolf/liferea/issues/846">bug report</a>
 I just want to illustrate that this dedicated amount of testing done for this 
 project done by sudden contributions never ceases to amaze me!!!</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.13.1 Released]]></title>
            <link>https://lzone.de/liferea/blog/2020-06-11-Liferea 1.13.1 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.13.1%20Released</guid>
            <pubDate>Thu, 11 Jun 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is a new unstable feature release for the 1.13 development series.</p>
<p><em>Please note the awesome amount of contributions as well as contributors in thise release!</em></p>
<p>Kudos to all of you!</p>
<h2 id="changes">Changes</h2>
<pre><code>   * Fixes #840: OPML source subfolders not working
      (fixed by Tomáš Janoušek)

    * #837: Removing GTimeVal references
      (Tom Perez)

    * #827: Respect global update refresh interval for TheOldReader
      (Matthew Horan)

    * #826: Fix save/restore position issues with tray icon
      (Matthew Horan)

    * #822: Improve performance of item list loading
      (Rich Coe)

    * Fixes #821: Skip current item when finding next unread item
      (Tom Perez)

    * #815: Add support for subscribing to HTML5 websites
      without RSS/Atom feeds by extracting article
      titles,links and descriptions
      (Lars Windolf)

    * #816: Increase size of stored favicons to 128x128px
      to improve icon quality in 3-pane wide view. Also add
      favicon URL discovery tests.

    * Fixes #821: Skip current selected unread item on
      'next unread item'
      (Tom Perez)

    * #800: Expose remove-item action for plugins
      (mozbugbox)

    * Fixes #799: plugins/headerbar.py translations not active
      (reported by Paul Gevers)

    * Fixes #783: Update IS_STATE when update item in itemlistview
      (mozbugbox)

    * #752: Trayicon plugin has now a configuration option
      to change the behaviour when closing Liferea.
      (BurnhamG)

    * Fixes #693: Add trayicon plugin option to disable minimizing to tray
      (BurnhamG)
</code></pre>
<h2 id="download">Download</h2>
<p>Grab the tarball on the Github release page <a href="https://github.com/lwindolf/liferea/releases/tag/v1.13.1">https://github.com/lwindolf/liferea/releases/tag/v1.13.1</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[Better Favicons Part 1]]></title>
            <link>https://lzone.de/liferea/blog/2020-04-20-Better-Favicons-Part-1</link>
            <guid>https://lzone.de/liferea/blog/Better%20Favicons%20Part%201</guid>
            <pubDate>Mon, 20 Apr 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>One known issue in Lifera v1.12 is the low resolution of favicons
when using the 3-pane wide view mode. In this mode favicons are displayed
larger to give a visual counter weight to the text excerpts shown below the headline.</p>
<h2 id="afirstimprovement">A first improvement</h2>
<p>Soon the following quite simple improvement will land in master:</p>
<p><img src="assets/favicons-higher-resolution.png" alt="3-pane wide view mode favicons with higher resolution" /></p>
<p>In the picture you see the GtkTreeView of the item list in 3 pane wide view
mode comparing 1.12 (left side) to branch favicon-rewrite (right side). The
functional change improving roughly 30% of the icons in my non-representative
feed list is by storing the icons in 128x128px instead of 32x32px as before.</p>
<p>The reason that this doesn't improve ~60% of the favicons is that many icons
are presented in resolutions smaller 128px. Some even only in 16px size.</p>
<h2 id="whatsnext">What's next</h2>
<p>So how to improve the other 60%? I believe building a proper image discovery
is the way to go. If you are familiar with SEO optimizing a website you might
know that for perfect scores you have to provide dozens of different sizes for
favicons. </p>
<p>If you want to get an impression of the complexity have a look at favicon
scaling services like <a href="https://favicomatic.com/">https://favicomatic.com/</a>
or blog posts describing the necessary favicon sizes like 
[https://globalspex.com/logo-dimensions/](this one).</p>
<p>The takeaway is that many websites do provide many different favicon sizes
and the images are linked via HTML markup. Here is an example of how 
an average IT news site as <a href="https://heise.de">heise.de</a> exposes those
images in their markup:</p>
<pre><code>&lt;meta property="og:image" content="https://heise.cloudimg.io/bound/1200x1200/q85.png-lossy-85.webp-lossy-85.foil1/_www-heise-de_/icons/ho/opengraph/opengraph.png"&gt;
&lt;meta property="twitter:image" content="https://heise.cloudimg.io/bound/1200x1200/q85.png-lossy-85.webp-lossy-85.foil1/_www-heise-de_/icons/ho/opengraph/opengraph.png"&gt;
&lt;link href="/favicon.ico?v=JykvN0w9Ye" rel="icon"&gt;
&lt;link rel="icon" type="image/png" sizes="32x32" href="/icons/ho/favicon/favicon-32x32.png"&gt;
&lt;link rel="icon" type="image/png" sizes="16x16" href="/icons/ho/favicon/favicon-16x16.png"&gt;
&lt;link rel="mask-icon" href="/icons/ho/touch-icons/safari-pinned-tab.svg" color="#323232"&gt;
&lt;link rel="apple-touch-icon" sizes="180x180" href="/icons/ho/touch-icons/apple-touch-icon-180x180.png"&gt;
&lt;link rel="apple-touch-icon-precomposed" sizes="180x180" href="/icons/ho/touch-icons/apple-touch-icon-precomposed.png"&gt;
&lt;meta name="msapplication-TileImage" content="/icons/ho/touch-icons/mstile-144x144.png"&gt;
</code></pre>
<p>So in this case, and I might have missed some, 9 images in different sizes
to choose from. Some of them even explicitely state their size. For example
the Apple touch icon with 180px.</p>
<p>All that's left to do is to build a robust selection mechanism and use those
high quality images!</p>
<h2 id="idontseeanyfavicons">I don't see any favicons…</h2>
<p>If you are wondering why you do not see favicons in 3-pane wide view you
probably do never read unread headlines by selecting a folder. When viewing
a folder the favicon column is added to help you distinguish the origin of
each headline in a visual way.</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Subscribing to HTML5 websites that have no feed]]></title>
            <link>https://lzone.de/liferea/blog/2020-04-19-Subscribing-to-HTML5-websites-that-have-no-feed</link>
            <guid>https://lzone.de/liferea/blog/Subscribing%20to%20HTML5%20websites%20that%20have%20no%20feed</guid>
            <pubDate>Sun, 19 Apr 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[<h2 id="newfeaturehtml5basedwebsitescrapingfallback">New feature: HTML5-based website scraping fallback</h2>
<p>For 1.13.1 I've just merged a feature that will use HTML5 markup
when there is no feed provided by a website to collect articles.</p>
<h2 id="preparingforthepostrssage">Preparing for the post-RSS age</h2>
<p>As of today most of the websites still provide RSS feeds. Still
I suspect we will see more and more sites without feeds. Mostly
in public sector websites often have historically bad markup and
are entirely missing feeds. Nowadays some of the websites do see
an overhaul and suddenly have proper HTML5 markup. Of course
they are still missing a feed.</p>
<p>The German state of Brandenburg portal is such an 
<a href="https://www.brandenburg.de/">example</a>.
With the new HTML5 feed support Liferea allows to 
subscribe directly to the website.</p>
<p>In general I believe this is a good fallback to have for every
news aggregator to allow users to stay within the aggregator
and to subscribe to even unlikely sources.</p>
<h2 id="parsingsemantichtml5">Parsing Semantic HTML5</h2>
<p>The good thing about HTML5 is that it can be more than a mindless
soup of &lt;p&gt;, &lt;span&gt; and &lt;div&gt; tags. With tags such as
&lt;header&gt;, &lt;figure&gt;, &lt;article&gt; and many more it becomes
possible to know what stuff is.</p>
<p>So if Liferea parses the frontpage of a news website and discovers
multiple &lt;article&gt; tags including a h1,h2 or h3 tag and a link
it will use those as headlines.</p>
<h2 id="autodiscoveryprecedence">Auto-discovery precedence</h2>
<p>For now Liferea will first check for actual feed links in the 
website and only if it doesn't find feed links it will check 
if the website is suitable HTML5 and start extracting content
like this.</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea 1.13.0 Released]]></title>
            <link>https://lzone.de/liferea/blog/2020-03-04-Liferea 1.13.0 Released</link>
            <guid>https://lzone.de/liferea/blog/Liferea%201.13.0%20Released</guid>
            <pubDate>Wed, 04 Mar 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is the first release in the new unstable line. While this release does not have 
any large changes or new features there will be breaking changes soon :-)</p>
<h2 id="changes">Changes</h2>
<pre><code>    * #764: Add MediaRSS support (e.g. Youtube feeds) to display
      descriptions and thumbnails
      (Mikel Olasagasti)
    * #773: Add WebKit Inspector menu option to HTML view when
      run with --debug-html (by sillyslux)
    * #714: Replaces deprecated gtk_menu_popup
      (Leiaz)
    * #705: New hotkey Ctrl-O to open enclosures
      (Leiaz)
    * #680: Add xdg-email command to item list popup menu
      (poetsmeniet)

    * Drop unused glade/google_source.ui
    * #699: Refactoring of duplicate check handlingg
      (dymoksc)

    * #746: Fix accessibility fatals reported by gla11y
      (reported by Paul Gevers)
    * Fixes #730: "Update all subscriptions at startup" overrides
      "Don't update this feed automatically"
      (Dymtro Kyrychuk, reported by Paul Wise)
    * Fixes #639: Right clicking on article no longer selects it
      (Leiaz, reported by Bruce Guenter)

    * #737: Update of Italian translation
      (madmurphy)
    * #745: URL fix for French example feeds
      (sblondon)
</code></pre>
<h2 id="download">Download</h2>
<p>Grab the tarball on the Github release page <a href="https://github.com/lwindolf/liferea/releases/tag/v1.13.0">https://github.com/lwindolf/liferea/releases/tag/v1.13.0</a></p>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea Trick #8: Change Menu Accelerators]]></title>
            <link>https://lzone.de/liferea/blog/2020-01-04-Liferea Trick #8: Change Menu Accelerators</link>
            <guid>https://lzone.de/liferea/blog/Liferea%20Trick%20%238%3A%20Change%20Menu%20Accelerators</guid>
            <pubDate>Sat, 04 Jan 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>When you are not satisfied with the menu key bindings defined by Liferea do not despair it is easy to change them!</p>
<p>This trick is valid for Liferea versions 1.12 to 1.15.</p>
<h2 id="editaccelsplugin">Edit Accels Plugin</h2>
<p>There is a plugin by frequent Liferea contributor Mozbugbox allowing you to change keybindings. It is not installed
per-default, so install it via <code>Tools</code> -&gt; <code>Plugin Installer</code>. In the plugin preferences click <code>Dump Accels</code> to create
a key binding file.</p>
<p><img src="/liferea/blog/assets/dump-accels-howto.gif" alt="Screencast of accels dump via plugin" /></p>
<p>Open the keybinding file in <code>~/.local/share/liferea/plugins/accels/accels.txt</code> in your 
favourite editor. This file will be now be read upon Liferea startup to set key bindings 
and contains lines like these:</p>
<pre><code>[...]
# ["app.next-read-item", []]
["app.next-unread-item", ["&lt;Primary&gt;n"]]
# ["app.open-item-enclosure", []]
# ["app.open-link-in-browser", []]
[...]
</code></pre>
<p>Note how only <code>app.next-unread-item</code> has a defined key binding <code>Ctrl-N</code> and for 
example <code>app.next-read-item</code> has none.</p>
<p>To change a key binding:</p>
<ul>
<li>First remove any '#' at the start of the line </li>
<li>Then enter a valid key binding. Choose prefixes like <code>&lt;Primary&gt;</code> (for Ctrl), <code>&lt;Alt&gt;</code>, <code>&lt;Shift&gt;</code> as needed and append the key after it.</li>
<li>Ensure the key binding you defined is not used elsewhere in the file</li>
</ul>
<h2 id="recentlifereatricks">Recent Liferea Tricks</h2>
<ul>
<li><a href="/liferea/blog/Liferea-Trick-1-Middle-Mouse-Button-Clicking.html">#1: Middle Mouse Button</a></li>
<li><a href="/liferea/blog/Liferea-Trick-2-Drag-and-Drop-URLs.html">#2: Drag and Drop URLs</a></li>
<li><a href="/liferea/blog/Liferea-Trick-3-Use-Feed-Auto-Discovery.html">#3: Feed Auto Discovery</a></li>
<li><a href="/liferea/blog/Liferea-Trick-4-Full-Screen-Mode.html">#4: Full Screen</a></li>
<li><a href="/liferea/blog/Liferea-Trick-5-Privacy-with-a-SOCKS-Proxy.html">#5: Privacy with SOCKS Proxy</a></li>
<li><a href="/liferea/blog/Liferea-Trick-6-Website-Scraping.html">#6: Website Scraping</a></li>
<li><a href="/liferea/blog/Liferea-Trick-7-Force-Read-Full-Posts.html">#7: Force Read Full Posts</a></li>
<li><a href="/liferea/blog/Liferea-Trick-8-Change-Menu-Accelerators.html">#8: Change Menu Accelerators</a></li>
<li><a href="/liferea/blog/Liferea-Trick-9-Skimming-Through-the-Headlines.html">#9: Skimming Through the Headlines</a></li>
<li><a href="/liferea/blog/Liferea-Trick-10-Custom-CSS-for-Article-Rendering.html">#10: Custom CSS for Article Rendering</a></li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Writing Liferea Plugins Tutorial Part 5]]></title>
            <link>https://lzone.de/liferea/blog/2018-12-07-Writing Liferea Plugins Tutorial Part 5</link>
            <guid>https://lzone.de/liferea/blog/Writing%20Liferea%20Plugins%20Tutorial%20Part%205</guid>
            <pubDate>Fri, 07 Dec 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This tutorial part is about how to localize core Python plugins so
contributors can translate the user interface.</p>
<h2 id="enablegettextforpythonplugins">Enable gettext for Python Plugins</h2>
<p>For a good plugin example have a look at the Liferea plugins
<a href="https://github.com/lwindolf/liferea/blob/master/plugins/headerbar.py#L30">headerbar.py</a>
where Robbie Cooper added gettext support.</p>
<p>To do so add this code in global scope:</p>
<pre><code># Initialize translations for tooltips
# Fallback to English if gettext module can't find the translations
# (That's possible if they are installed in a nontraditional dir)
import gettext
_ = lambda x: x
try:
    t = gettext.translation("liferea")
except FileNotFoundError:
    pass
else:
    _ = t.gettext
</code></pre>
<p>And now everywhere you need it you can use translated literals, e.g.</p>
<pre><code>button.set_tooltip_text(_("Previous Item"))
</code></pre>
<p>Note the <code>_()</code> style which is the gettext wrapper to replace text with
translations.</p>
<hr/>
<h2 id="related">Related</h2>
<p>Also check out the other plugin tutorial posts</p>
<ul>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-1">Plugin Tutorial Part 1</a> (Plugin Boiler Plate)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-2">Plugin Tutorial Part 2</a> (Acessing and modify UI elements)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-3">Plugin Tutorial Part 3</a> (Adding menu elements)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-4">Plugin Tutorial Part 4</a> (Using GTK inspector)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-5">Plugin Tutorial Part 5</a> (Enabling translations for plugins)</li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Writing Liferea Plugins Tutorial Part 4]]></title>
            <link>https://lzone.de/liferea/blog/2018-01-25-Writing Liferea Plugins Tutorial Part 4</link>
            <guid>https://lzone.de/liferea/blog/Writing%20Liferea%20Plugins%20Tutorial%20Part%204</guid>
            <pubDate>Thu, 25 Jan 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Here is another How-To on GTK/libpeas plugin development. This time it is on
how to use the <a rel="nofollow" href="https://blogs.gnome.org/mclasen/2014/05/15/introducing-gtkinspector/">GTK Inspector</a>
 to dive into application details.</p>
<h2 id="howtoenablegtkinspector">How to enable GTK Inspector</h2>
<p>Before we can start we have to enable the GTK inspector with </p>
<pre><code>gsettings set org.gtk.Settings.Debug enable-inspector-keybinding true
</code></pre>
<p>Now with any GTK application you can open the GTK inspector by pressing
either <code>Ctrl-Shift-I</code> or <code>Ctrl-Shift-D</code>. If this doesn't help try launching with</p>
<pre><code>GTK_DEBUG=interactive liferea
</code></pre>
<h2 id="discoveringwidgetnameswithgtkinspector">Discovering widget names with GTK Inspector</h2>
<p>When you have successfully launched the inspector you should see a window like this:</p>
<p><img src='/images/liferea-gtk-inspector.png'/></p>
<p>Note the second column <code>Name</code> in the <code>Objects</code> tab containing all those widget
names we covered in part 2+3 of this tutorial.</p>
<h2 id="tryinggtkcssstyles">Trying GTK CSS styles</h2>
<p>If you select the <code>CSS</code> tab you get a inline editor to try style changes in
Liferea. If you make modifications successfully you can save them to disk
and make them permanent.</p>
<p>For quick effect try entering</p>
<pre><code>treeview {
  background-color:red;
}

button {
  font-size: 200%
}
</code></pre>
<p>and notice the immediate changes.</p>
<p>To address widgets by name ensure to always prefix the widget type selector.
For example to change the <code>itemlist</code> treeview do</p>
<pre><code>treeview#itemlist {
  background-color:green;
}
</code></pre>
<p>and not just (as one would in HTML)</p>
<pre><code>#itemlist {
  background-color:green;
}
</code></pre>
<p>You probably also noticed that widget type names are not <code>GtkTreeView</code> but
<code>treeview</code>, not <code>GtkButton</code> but <code>button</code> and so on. Just lowercase and strip
<code>Gtk</code> and you have the selector name.</p>
<h2 id="experimentwithgtksettings">Experiment with GTK settings</h2>
<p>Finally check out the <code>Visual</code> tab which exposes all major GTK settings on a
per application basis. Here you can try fonts, theme setting, dark variant…</p>
<hr/>
<h2 id="related">Related</h2>
<p>Also check out the other plugin tutorial posts</p>
<ul>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-1">Plugin Tutorial Part 1</a> (Plugin Boiler Plate)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-2">Plugin Tutorial Part 2</a> (Acessing and modify UI elements)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-3">Plugin Tutorial Part 3</a> (Adding menu elements)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-4">Plugin Tutorial Part 4</a> (Using GTK inspector)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-5">Plugin Tutorial Part 5</a> (Enabling translations for plugins)</li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Writing Liferea Plugins Tutorial Part 3]]></title>
            <link>https://lzone.de/liferea/blog/2018-01-07-Writing Liferea Plugins Tutorial Part 3</link>
            <guid>https://lzone.de/liferea/blog/Writing%20Liferea%20Plugins%20Tutorial%20Part%203</guid>
            <pubDate>Sun, 07 Jan 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Welcome to a new installment of the plugins tutorial! Todays issue will cover menu modifications. This allows you to add new menu options for features you introduce with your plugin.</p>
<h2 id="extendingamenuinpygi">Extending a menu in PyGI</h2>
<p>Now how do we extend a Liferea menu? First we get the menu from the GtkBuilder:</p>
<pre><code>self.menu = self.shell.get_property("builder").get_object("tools_menu")
</code></pre>
<p>Now we can append a new menu action:</p>
<pre><code>toolsmenu.append ('Menu Entry Title', 'app.MyPluginMenuEntry')
</code></pre>
<p>Finally we have to create an action matching <code>app.MyPluginMenuEntry</code>:</p>
<pre><code>action = Gio.SimpleAction.new ('MyPluginMenuEntry', None)
action.connect("activate", self._menu_callback)

self._app = Liferea.Shell.get_window().get_application ()
self._app.add_action (action)
</code></pre>
<h2 id="availablemenus">Available Menus</h2>
<p>You probably noticed the <code>ToolsMenu</code> and <code>MainwindowMenubar</code> ids in the XML snippet above. Here is a list of all menu ids in 1.14 which also can be found in <a rel="nofollow" href="https://github.com/lwindolf/liferea/blob/liferea-1_14/glade/liferea_menu.ui">glade/liferea_menu.ui</a>.</p>
<table border="1">
<thead><tr>
<th>submenu id</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr><td>feed_menu</td><td>All actions regarding subscriptions and the feed list</td></tr>
<tr><td>item_menu</td><td>All actions regarding the item list</td></tr>
<tr><td>view_menu</td><td>All actions controlling reading layout</td></tr>
<tr><td>tools_menu</td><td>The menu to access preferences and update status</td></tr>
<tr><td>help_menu</td><td>The place to go for help</td></tr>
</tbody>
</table>
<h2 id="completesolution">Complete Solution</h2>
<p>Everything put together in a plugin could look like this:</p>
<pre><code>import gi

gi.require_version('Gtk', '3.0')

from gi.repository import GObject, Liferea, Gtk

class AppActivatable(GObject.Object, Liferea.ShellActivatable):
    __gtype_name__ = "MyPluginAppActivatable"

    shell = GObject.property(type=Liferea.Shell)

    def __init__(self):
        GObject.Object.__init__(self)

    def do_activate(self):
        action = Gio.SimpleAction.new ('InstallPlugins', None)
        action.connect("activate", self._run)

        self._app = self.shell.get_window().get_application ()
        self._app.add_action (action)

        toolsmenu = self.shell.get_property("builder").get_object ("tools_menu")
        toolsmenu.append (_('Plugins'), 'app.InstallPlugins')

    def do_deactivate(self):
        self._browser = None
        self._app.remove_action ('InstallPlugins')
        self.app = None

def _run(self, action, data=None):
        print("Menu action triggered")
</code></pre>
<p>For a real world example have a look at <a rel="nofollow" href="https://github.com/lwindolf/liferea/blob/master/plugins/plugin-installer.py">https://github.com/lwindolf/liferea/blob/master/plugins/plugin-installer.py</a></p>
<hr/>
<h2 id="related">Related</h2>
<p>Also check out the other plugin tutorial posts</p>
<ul>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-1">Plugin Tutorial Part 1</a> (Plugin Boiler Plate)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-2">Plugin Tutorial Part 2</a> (Acessing and modify UI elements)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-3">Plugin Tutorial Part 3</a> (Adding menu elements)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-4">Plugin Tutorial Part 4</a> (Using GTK inspector)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-5">Plugin Tutorial Part 5</a> (Enabling translations for plugins)</li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Writing Liferea Plugins Tutorial Part 2]]></title>
            <link>https://lzone.de/liferea/blog/2018-01-06-Writing Liferea Plugins Tutorial Part 2</link>
            <guid>https://lzone.de/liferea/blog/Writing%20Liferea%20Plugins%20Tutorial%20Part%202</guid>
            <pubDate>Sat, 06 Jan 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Let's continue the plugin tutorial! The last <a href="https://lzone.de/liferea/blog/Writing+Liferea+Plugins+Tutorial+Part+1">installement</a> was on how plugins work and how to create the boilerplate for a new plugin. Now let's look into how to access Liferea UI elements and how to modify them.</p>
<h2 id="accessinguielements">Accessing UI elements</h2>
<p>Using the plugin boilerplate for a Liferea.ShellActivatable (a plugin that activates once the Liferea shell, which as an object comprises the entire main window UI, has been setup) we get a member variable named <code>shell</code></p>
<pre><code>shell = GObject.property (type=Liferea.Shell)
</code></pre>
<p>which can be used to look up GTK objects by name using</p>
<pre><code>shell.lookup(&lt;some name&gt;)
</code></pre>
<p>Some interesting names to look up are:</p>
<table border='1'>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
<tr><td>mainwindow</td><td>The main GtkWindow</td></tr>
<tr><td>leftpane</td><td>The vertical pane containing the feed list</td></tr>
<tr><td>rightpane</td><td>The vertical pane containing the rest</td></tr>
<tr><td>feedlist</td><td>The feed list GtkTreeView</td></tr>
<tr><td>itemlist</td><td>The item list GtkTreeView</td></tr>
<tr><td>browsertabs</td><td>The tabs notebook of the item view</td></tr>
<tr><td>statusbar</td><td>The main window status bar</td></tr>
</table>
<p>This list not being exhaustive you can grep the code for more uses</p>
<pre><code>rgrep liferea_shell_lookup src/
</code></pre>
<p>in general when you want to modify existing UI elements or add extra elements to the UI above list should be a good start.</p>
<h2 id="examplemodifyingthefeedlist">Example: Modifying the feed list</h2>
<p>Here is a simple example to hide the 2nd column of the feed list GtkTreeView. To do this we use the <code>shell</code> member to look up the <code>feedlist</code> GtkTreeView and ask it for the 2nd column which we then hide:</p>
<pre><code>from gi.repository import GObject, Peas, PeasGtk, Gtk, Liferea, Gdk

class NrColumnHidePlugin (GObject.Object, Liferea.ShellActivatable):
    __gtype_name__ = 'NrColumnHidePlugin'

    object = GObject.property (type=GObject.Object)
    shell = GObject.property (type=Liferea.Shell)

    def do_activate (self):
        treeview = self.shell.lookup ("feedlist")
        column = Gtk.TreeView.get_column (treeview, 1)
        Gtk.TreeViewColumn.set_visible (column, 0);

    def do_deactivate (self):
        return
</code></pre>
<p>This is all done on activate, nothing needs to be done on deactivation.</p>
<hr/>
<h2 id="related">Related</h2>
<p>Also check out the other plugin tutorial posts</p>
<ul>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-1">Plugin Tutorial Part 1</a> (Plugin Boiler Plate)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-2">Plugin Tutorial Part 2</a> (Acessing and modify UI elements)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-3">Plugin Tutorial Part 3</a> (Adding menu elements)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-4">Plugin Tutorial Part 4</a> (Using GTK inspector)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-5">Plugin Tutorial Part 5</a> (Enabling translations for plugins)</li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Writing Liferea Plugins Tutorial Part 1]]></title>
            <link>https://lzone.de/liferea/blog/2018-01-05-Writing Liferea Plugins Tutorial Part 1</link>
            <guid>https://lzone.de/liferea/blog/Writing%20Liferea%20Plugins%20Tutorial%20Part%201</guid>
            <pubDate>Fri, 05 Jan 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Some time ago a fellow Liferea user asked about documentation on writing Liferea plugins. I see the need and the benefit and want to start doing so with a series of blog posts that later can be compiled into a tutorial to be included on the website/sources.</p>
<h2 id="pluginswithgobjectintrospection">Plugins with GObject Introspection</h2>
<p>First it is important to know that Liferea 1.10+ uses <a href="https://wiki.gnome.org/action/show/Projects/GObjectIntrospection?action=show&redirect=GObjectIntrospection">GObject Introspection</a> (GI) and <a href="https://developer.gnome.org/libpeas/stable/">libpeas</a> to allow implementing plugins. This quote from the <a href="https://wiki.gnome.org/action/show/Projects/GObjectIntrospection?action=show&redirect=GObjectIntrospection">GNOME wiki</a> explain how GI works:</p>
<p><i><quote>GObject introspection is a middleware layer between C libraries (using GObject) and language bindings. The C library can be scanned at compile time and generate a metadata file, in addition to the actual native C library. Then at runtime, language bindings can read this metadata and automatically provide bindings to call into the C library. </quote></i></p>
<p>The important point is: by Liferea using GI (as all GNOME applications and many other GTK applications do now) plugins can be written in practically <b>any scripting language</b>. Most users seem to favour Python and all current plugins included with the Liferea sources are in Python. Note that this tutorial will also focus on Python only.</p>
<h2 id="howarepluginstriggeredfromwithinliferea">How are plugins triggered from within Liferea?</h2>
<p>Ok, I can write a script in Python! How will Liferea run it and when?</p>
<p>This is where libpeas comes in, which is a basic library to implement a plugin system. If you click the preferences dialog and switch to the "Plugins" button you see a dialog provided by the <a href="https://developer.gnome.org/libpeas/stable/PeasGtkPluginManager.html">PeasGtkPluginsManager</a> class of libpeas. Detection, activation and configuration of plugins is handled by libpeas.</p>
<p><img src='/liferea/blog/assets/preferences-plugins.png'/></p>
<p>Now for the "When?" question: To properly allow applications to hook plugins into different parts of the applications libpeas allow an application to define one or more so called "Activatable" interfaces.</p>
<p>For simplicity for Liferea I decided to only support a LifereaShellActivatable interface. This means all plugins are activated together with the LifereaShell instance (<code>src/ui/liferea_shell.c</code>). This class represents the main application window holding all widgets. So when your plugin gets activated all widgets exist and you can access everything like extending or modifying the GUI, changing settings, everything you can think of.</p>
<p>Note: in the code there are two more interfaces:</p>
<ul>
<li>LifereaAuthActivatable</li>
<li>LifereaMediaPlayerActivatable</li>
</ul>
<p>that are used to implement two important features (GNOME keyring support and a simple media player). Feel free to use those two, but be aware that they work differently and activate at other times and not just once as the <code>LifereaShellActivatable</code>.</p>
<h2 id="usinglifereashellactivatable">Using LifereaShellActivatable</h2>
<p>If you script in Python using <code>LifereaShellActivatable</code> means simply deriving a new class from it. For example:</p>
<pre><code>from gi.repository import GObject, Peas, PeasGtk, Gtk, Liferea, Gdk

class ExamplePlugin (GObject.Object, Liferea.ShellActivatable):
    __gtype_name__ = 'ExamplePlugin'

    object = GObject.property (type=GObject.Object)
    shell = GObject.property (type=Liferea.Shell)

    def do_activate (self):
        # Do something here...

    def do_deactivate (self):
        # Maybe do somethin here too...
</code></pre>
<p>The <code>activate()</code> and <code>deactivate()</code> methods are required by libpeas and provide you with the starting points to do stuff. By fetching the <code>Liferea.Shell</code> instance you gain access to the main window. Using this you can both lookup widgets or other Liferea classes like the Liferea.FeedList to perform actions against business objects of Liferea.</p>
<h2 id="providingapluginconfiguration">Providing a plugin configuration</h2>
<p>Along with the actual plugin code libpeas requires a plugin configuration file defining the language the plugin is implemented with and metadata (name, description, website…) for this plugin. Such a file looks like this:</p>
<pre><code>[Plugin]
Module=example
Loader=python3
IAge=2
Name=Example Plugin
Description=Illustrates how to implement plugins in Liferea
Authors=Lars Windolf &lt;lars.windolf@gmx.de&gt;
Copyright=Copyright © 2014 Lars Windolf
Website=https://lzone.de/liferea/
Help=https://lzone.de/liferea/
</code></pre>
<p>Most important is the <code>Loader</code> setting indicating the correct scripting language and 
the <code>Module</code> setting which together with the <code>Loader</code> setting as <code>python3</code> indicates 
that our plugin script is to be named "example.py". Both the "example.py" plugin script 
and its <code>example.plugin</code> config file needs to be put into the Liferea plugins directory…</p>
<h2 id="wheretoputmypluginscript">Where to put my plugin script?</h2>
<p>There are two possible locations for the plugin script (and it's configuration file):</p>
<ul>
<li>For user provided plugins: usually <code>~/.local/share/liferea/plugins</code></li>
<li>For distro package provided plugins: usually <code>/usr/lib/liferea/plugins</code></li>
</ul>
<p>Note that paths can be different with different XDG settings.</p>
<p>When writing and testing don't bother installing the plugin in the package directories. Just put it in <code>~/.config/liferea/plugins</code> and fire up Liferea.</p>
<hr/>
<p>More about how to check for activation, debug problems and handling enabling/disabling in the next installment of this tutorial!</p>
<h2 id="related">Related</h2>
<p>Also check out the other plugin tutorial posts</p>
<ul>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-1">Plugin Tutorial Part 1</a> (Plugin Boiler Plate)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-2">Plugin Tutorial Part 2</a> (Acessing and modify UI elements)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-3">Plugin Tutorial Part 3</a> (Adding menu elements)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-4">Plugin Tutorial Part 4</a> (Using GTK inspector)</li>
<li><a href="/liferea/blog/Writing-Liferea-Plugins-Tutorial-Part-5">Plugin Tutorial Part 5</a> (Enabling translations for plugins)</li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea Trick #10: Custom CSS for Article Rendering]]></title>
            <link>https://lzone.de/liferea/blog/2016-08-23-Liferea Trick #10: Custom CSS for Article Rendering</link>
            <guid>https://lzone.de/liferea/blog/Liferea%20Trick%20%2310%3A%20Custom%20CSS%20for%20Article%20Rendering</guid>
            <pubDate>Tue, 23 Aug 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Liferea renders articles as HTML content using Webkit (the Safari rendering engine) with colors adapted to the active GTK theme in a somewhat neutral and mail like style. If you dislike it you might want to change aspects of the CSS used to render the articles.</p>
<h2 id="howitworks">How it Works</h2>
<p>To facilitate this Liferea loads 2 CSS definitions</p>
<ul>
<li>a predefined one in <code>&lt;install root&gt;/share/liferea/css/liferea.css</code></li>
<li>an empty one with all styles documented in <code>~/.config/liferea/liferea.css</code></li>
</ul>
<p>Both stylesheets are loaded so that the one in your home directory overrules the predefined one. 
And the documentation should help you to find the selectors you want to overwrite. Have a 
look at <code>~/config/liferea/liferea.css</code> and try to change definitions. It is really easy.</p>
<p>Some example lines from <code>~/.config/liferea/liferea.css</code>:</p>
<pre><code>/* Header table fields to different item metadata */
// .author, .categories, .source { }
// .date { }

/* Item/feed description */
// div.content { }

/* Comment rendering */
// div.comment { }
// div.comment_body { }
// div.comment_title { }
</code></pre>
<hr/>
<h2 id="recentlifereatricks">Recent Liferea Tricks</h2>
<ul>
<li><a href="/liferea/blog/Liferea-Trick-1-Middle-Mouse-Button-Clicking.html">#1: Middle Mouse Button</a></li>
<li><a href="/liferea/blog/Liferea-Trick-2-Drag-and-Drop-URLs.html">#2: Drag and Drop URLs</a></li>
<li><a href="/liferea/blog/Liferea-Trick-3-Use-Feed-Auto-Discovery.html">#3: Feed Auto Discovery</a></li>
<li><a href="/liferea/blog/Liferea-Trick-4-Full-Screen-Mode.html">#4: Full Screen</a></li>
<li><a href="/liferea/blog/Liferea-Trick-5-Privacy-with-a-SOCKS-Proxy.html">#5: Privacy with SOCKS Proxy</a></li>
<li><a href="/liferea/blog/Liferea-Trick-6-Website-Scraping.html">#6: Website Scraping</a></li>
<li><a href="/liferea/blog/Liferea-Trick-7-Force-Read-Full-Posts.html">#7: Force Read Full Posts</a></li>
<li><a href="/liferea/blog/Liferea-Trick-8-Change-Menu-Accelerators.html">#8: Change Menu Accelerators</a></li>
<li><a href="/liferea/blog/Liferea-Trick-9-Skimming-Through-the-Headlines.html">#9: Skimming Through the Headlines</a></li>
<li><a href="/liferea/blog/Liferea-Trick-10-Custom-CSS-for-Article-Rendering.html">#10: Custom CSS for Article Rendering</a></li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea Trick #1: Middle Mouse Button Clicking]]></title>
            <link>https://lzone.de/liferea/blog/2016-08-23-Liferea Trick #1: Middle Mouse Button Clicking</link>
            <guid>https://lzone.de/liferea/blog/Liferea%20Trick%20%231%3A%20Middle%20Mouse%20Button%20Clicking</guid>
            <pubDate>Tue, 23 Aug 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>For all the readers of this development blog I want to share same hidden usability things in Liferea. Today I want to start with using the 3rd mouse button.</p>
<h2>Places Where To Use Middle Click</h2>
<ol>
<li><b>Subscription List</b>: Click on any subscription or folder to mark everything in the subscription or folder as read.</li>
<li><b>Item List (on flag column)</b>: Click on the flag column to toggle the flag for an item without selecting it.</li>
<li><b>Item Lists (except flag column)</b>: Click everwhere beside the flag column and you toggle the read status of the item even without selecting it.</li>
<li><b>Browser View</b>: In any browser view, be it a browser tab or the item view pane middle click any link to open it in a new browser tab within Liferea.</li> 
</ol>
<h2>Recent Liferea Tricks</h2>
<ul>
<li><a href="/liferea/blog/Liferea-Trick-1-Middle-Mouse-Button-Clicking.html">#1: Middle Mouse Button</a></li>
<li><a href="/liferea/blog/Liferea-Trick-2-Drag-and-Drop-URLs.html">#2: Drag and Drop URLs</a></li>
<li><a href="/liferea/blog/Liferea-Trick-3-Use-Feed-Auto-Discovery.html">#3: Feed Auto Discovery</a></li>
<li><a href="/liferea/blog/Liferea-Trick-4-Full-Screen-Mode.html">#4: Full Screen</a></li>
<li><a href="/liferea/blog/Liferea-Trick-5-Privacy-with-a-SOCKS-Proxy.html">#5: Privacy with SOCKS Proxy</a></li>
<li><a href="/liferea/blog/Liferea-Trick-6-Website-Scraping.html">#6: Website Scraping</a></li>
<li><a href="/liferea/blog/Liferea-Trick-7-Force-Read-Full-Posts.html">#7: Force Read Full Posts</a></li>
<li><a href="/liferea/blog/Liferea-Trick-8-Change-Menu-Accelerators.html">#8: Change Menu Accelerators</a></li>
<li><a href="/liferea/blog/Liferea-Trick-9-Skimming-Through-the-Headlines.html">#9: Skimming Through the Headlines</a></li>
<li><a href="/liferea/blog/Liferea-Trick-10-Custom-CSS-for-Article-Rendering.html">#10: Custom CSS for Article Rendering</a></li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea Trick #2: Drag and Drop URLs]]></title>
            <link>https://lzone.de/liferea/blog/2016-08-23-Liferea Trick #2: Drag and Drop URLs</link>
            <guid>https://lzone.de/liferea/blog/Liferea%20Trick%20%232%3A%20Drag%20and%20Drop%20URLs</guid>
            <pubDate>Tue, 23 Aug 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Maybe it is obvious, but you can of course use drag&amp;drop to add feed subscriptions to Liferea. </p>
<p>You can drag </p>
<ul>
<li>into the subscription list</li>
<li>onto the tray icon</li>
</ul>
<p>and Liferea will create a new subscription.</p>
<p>You can also Drag&amp;Drop any web sites URL and Liferea will try to auto-discover the feed URL from it.</p>
<p>Note that dragging URLs into the item browser pane or a browser tab will just launch the URL in the internal browser.</p>
<h2>Recent Liferea Tricks</h2>
<ul>
<li><a href="/liferea/blog/Liferea-Trick-1-Middle-Mouse-Button-Clicking.html">#1: Middle Mouse Button</a></li>
<li><a href="/liferea/blog/Liferea-Trick-2-Drag-and-Drop-URLs.html">#2: Drag and Drop URLs</a></li>
<li><a href="/liferea/blog/Liferea-Trick-3-Use-Feed-Auto-Discovery.html">#3: Feed Auto Discovery</a></li>
<li><a href="/liferea/blog/Liferea-Trick-4-Full-Screen-Mode.html">#4: Full Screen</a></li>
<li><a href="/liferea/blog/Liferea-Trick-5-Privacy-with-a-SOCKS-Proxy.html">#5: Privacy with SOCKS Proxy</a></li>
<li><a href="/liferea/blog/Liferea-Trick-6-Website-Scraping.html">#6: Website Scraping</a></li>
<li><a href="/liferea/blog/Liferea-Trick-7-Force-Read-Full-Posts.html">#7: Force Read Full Posts</a></li>
<li><a href="/liferea/blog/Liferea-Trick-8-Change-Menu-Accelerators.html">#8: Change Menu Accelerators</a></li>
<li><a href="/liferea/blog/Liferea-Trick-9-Skimming-Through-the-Headlines.html">#9: Skimming Through the Headlines</a></li>
<li><a href="/liferea/blog/Liferea-Trick-10-Custom-CSS-for-Article-Rendering.html">#10: Custom CSS for Article Rendering</a></li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea Trick #3: Use Feed Auto Discovery]]></title>
            <link>https://lzone.de/liferea/blog/2016-08-23-Liferea Trick #3: Use Feed Auto Discovery</link>
            <guid>https://lzone.de/liferea/blog/Liferea%20Trick%20%233%3A%20Use%20Feed%20Auto%20Discovery</guid>
            <pubDate>Tue, 23 Aug 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>This is an easy one: <b>Don't bother entering the exact feed URL when subscribing!</b></p>
<p>These days it is standard for websites to support feed auto discovery. Many blogs and websites actually do not add feed subscription icons and links anymore. The feed link is just included in the HTML markup and every aggregator can extract it. No need for you to look for it.</p>
<p>To make it even simpler <b>combine with trick #2</b> and use drag&amp;drop! On every websites whose feed you want to add just drag the favicon from the browser location bar into Liferea. Most browsers do interpret this as dragging the location. Do not even bother copying the URL.</p>
<p>Be lazy :-)</p>
<h2>Recent Liferea Tricks</h2>
<ul>
<li><a href="/liferea/blog/Liferea-Trick-1-Middle-Mouse-Button-Clicking.html">#1: Middle Mouse Button</a></li>
<li><a href="/liferea/blog/Liferea-Trick-2-Drag-and-Drop-URLs.html">#2: Drag and Drop URLs</a></li>
<li><a href="/liferea/blog/Liferea-Trick-3-Use-Feed-Auto-Discovery.html">#3: Feed Auto Discovery</a></li>
<li><a href="/liferea/blog/Liferea-Trick-4-Full-Screen-Mode.html">#4: Full Screen</a></li>
<li><a href="/liferea/blog/Liferea-Trick-5-Privacy-with-a-SOCKS-Proxy.html">#5: Privacy with SOCKS Proxy</a></li>
<li><a href="/liferea/blog/Liferea-Trick-6-Website-Scraping.html">#6: Website Scraping</a></li>
<li><a href="/liferea/blog/Liferea-Trick-7-Force-Read-Full-Posts.html">#7: Force Read Full Posts</a></li>
<li><a href="/liferea/blog/Liferea-Trick-8-Change-Menu-Accelerators.html">#8: Change Menu Accelerators</a></li>
<li><a href="/liferea/blog/Liferea-Trick-9-Skimming-Through-the-Headlines.html">#9: Skimming Through the Headlines</a></li>
<li><a href="/liferea/blog/Liferea-Trick-10-Custom-CSS-for-Article-Rendering.html">#10: Custom CSS for Article Rendering</a></li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea Trick #4: Full Screen Mode]]></title>
            <link>https://lzone.de/liferea/blog/2016-08-23-Liferea Trick #4: Full Screen Mode</link>
            <guid>https://lzone.de/liferea/blog/Liferea%20Trick%20%234%3A%20Full%20Screen%20Mode</guid>
            <pubDate>Tue, 23 Aug 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Are you using a smaller laptop and have not much screen real estate? Then wether it is a mail client or web browser or news aggregator using it in full screen mode gets you more content visible. Less space is wasted for menu elements and window decoration.</p>
<p>In Liferea <b>press F11</b> or select "View" -&gt; "Fullscreen" to enable full screen mode.</p>
<p>If you want to save even more vertical space consider hiding the toolbar by enabling the option in the preferences dialog. </p>
<h2>Recent Liferea Tricks</h2>
<ul>
<li><a href="/liferea/blog/Liferea-Trick-1-Middle-Mouse-Button-Clicking.html">#1: Middle Mouse Button</a></li>
<li><a href="/liferea/blog/Liferea-Trick-2-Drag-and-Drop-URLs.html">#2: Drag and Drop URLs</a></li>
<li><a href="/liferea/blog/Liferea-Trick-3-Use-Feed-Auto-Discovery.html">#3: Feed Auto Discovery</a></li>
<li><a href="/liferea/blog/Liferea-Trick-4-Full-Screen-Mode.html">#4: Full Screen</a></li>
<li><a href="/liferea/blog/Liferea-Trick-5-Privacy-with-a-SOCKS-Proxy.html">#5: Privacy with SOCKS Proxy</a></li>
<li><a href="/liferea/blog/Liferea-Trick-6-Website-Scraping.html">#6: Website Scraping</a></li>
<li><a href="/liferea/blog/Liferea-Trick-7-Force-Read-Full-Posts.html">#7: Force Read Full Posts</a></li>
<li><a href="/liferea/blog/Liferea-Trick-8-Change-Menu-Accelerators.html">#8: Change Menu Accelerators</a></li>
<li><a href="/liferea/blog/Liferea-Trick-9-Skimming-Through-the-Headlines.html">#9: Skimming Through the Headlines</a></li>
<li><a href="/liferea/blog/Liferea-Trick-10-Custom-CSS-for-Article-Rendering.html">#10: Custom CSS for Article Rendering</a></li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea Trick #5: Privacy with a SOCKS Proxy]]></title>
            <link>https://lzone.de/liferea/blog/2016-08-23-Liferea Trick #5: Privacy with a SOCKS Proxy</link>
            <guid>https://lzone.de/liferea/blog/Liferea%20Trick%20%235%3A%20Privacy%20with%20a%20SOCKS%20Proxy</guid>
            <pubDate>Tue, 23 Aug 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Starting with Liferea 1.10 you can use a SOCKS proxy. This is possible because Liferea uses the libproxy support provided by the libsoup networking library since 1.10.</p>
<h2>What is a SOCKS Proxy?</h2>
<p>SOCKS stands for "socket secure" it simply means to use an encrypted connection for whatever you do. Configuring a SOCKS proxy in your desktop environment means that you want all applications to do internet access via an encrypted connection to a safe server you have access to.</p>
<h2>Why Use a SOCKS Proxy for Feed Reading?</h2>
<p>Well, this of course is useful if you are in an environment were you do not want others to see what you are reading. Be it political blogs or private but unencrypted feeds. Also you simply might not want for your employer to know what servers you are polling news feeds from anyway. There are many good and bad reasons.</p>
<h2>How To Use SOCKS Proxy with Liferea and GNOME?</h2>
<p>First please note that Liferea supports using a SOCKS proxy only via the GNOME network preferences. Actually it relies on libsoup using the SOCKS settings from there. </p>
<h4>Requirements</h4>
<ol>
<li>Liferea 1.10+ with GNOME desktop</li>
<li>You have a private server to use as a proxy</li>
<li>You can connect via SSH to this server</li>
</ol>
<h4>Step 1: Connecting the SOCKS Proxy</h4>
<p>There are many ways to do this and <a href="http://www.catonmat.net/blog/linux-socks5-proxy/">many</a> <a href="http://wiki.vpslink.com/Instant_SOCKS_Proxy_over_SSH">online</a> <a href="http://blog.agdunn.net/?p=107">tutorials</a>. The easiest way is to use SSH like this</p>
<pre>ssh -D 8080 &lt;user>@&lt;private server></pre>
<h4>Step 2: Client Proxy Configuration</h4>
<p>So the first thing to do is to configure Liferea to use the GNOME network settings:</p>
<p><img src="/images/proxy-autodetect.png"/></p>
<p>Ensure to set the preferences to proxy auto-detect as shown in the screenshot above. Next go to the GNOME preferences and configure a SOCKS proxy on "localhost" and port "8080" or whatever port you used when you ran the SSH command.</p>
<p>That's it! Try to update feeds in Liferea and watch out for errors in the status line.</p>
<h2>What About Older Liferea Versions?</h2>
<p>If you are running an older version of Liferea have a look at this post about <a href="/liferea/blog/Liferea-SOCKS-Proxy-Workaround">a SOCKS proxy workaround</a> using the tool redsocks.</p>
<h2>Recent Liferea Tricks</h2>
<ul>
<li><a href="/liferea/blog/Liferea-Trick-1-Middle-Mouse-Button-Clicking.html">#1: Middle Mouse Button</a></li>
<li><a href="/liferea/blog/Liferea-Trick-2-Drag-and-Drop-URLs.html">#2: Drag and Drop URLs</a></li>
<li><a href="/liferea/blog/Liferea-Trick-3-Use-Feed-Auto-Discovery.html">#3: Feed Auto Discovery</a></li>
<li><a href="/liferea/blog/Liferea-Trick-4-Full-Screen-Mode.html">#4: Full Screen</a></li>
<li><a href="/liferea/blog/Liferea-Trick-5-Privacy-with-a-SOCKS-Proxy.html">#5: Privacy with SOCKS Proxy</a></li>
<li><a href="/liferea/blog/Liferea-Trick-6-Website-Scraping.html">#6: Website Scraping</a></li>
<li><a href="/liferea/blog/Liferea-Trick-7-Force-Read-Full-Posts.html">#7: Force Read Full Posts</a></li>
<li><a href="/liferea/blog/Liferea-Trick-8-Change-Menu-Accelerators.html">#8: Change Menu Accelerators</a></li>
<li><a href="/liferea/blog/Liferea-Trick-9-Skimming-Through-the-Headlines.html">#9: Skimming Through the Headlines</a></li>
<li><a href="/liferea/blog/Liferea-Trick-10-Custom-CSS-for-Article-Rendering.html">#10: Custom CSS for Article Rendering</a></li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea Trick #6: Website Scraping]]></title>
            <link>https://lzone.de/liferea/blog/2016-08-23-Liferea Trick #6: Website Scraping</link>
            <guid>https://lzone.de/liferea/blog/Liferea%20Trick%20%236%3A%20Website%20Scraping</guid>
            <pubDate>Tue, 23 Aug 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Not every interesting website provides a feed. Some feeds are broken. And some websites do provide summaries only or no content at all. Besides asking the owner of the website to add a feed or provide more details the only choice left might be to "scrape" the website content.</p>
<p><a href="/liferea/scraping.htm">Read about how to scrape websites with Liferea</a></p>
<h2>Recent Liferea Tricks</h2>
<ul>
<li><a href="/liferea/blog/Liferea-Trick-1-Middle-Mouse-Button-Clicking.html">#1: Middle Mouse Button</a></li>
<li><a href="/liferea/blog/Liferea-Trick-2-Drag-and-Drop-URLs.html">#2: Drag and Drop URLs</a></li>
<li><a href="/liferea/blog/Liferea-Trick-3-Use-Feed-Auto-Discovery.html">#3: Feed Auto Discovery</a></li>
<li><a href="/liferea/blog/Liferea-Trick-4-Full-Screen-Mode.html">#4: Full Screen</a></li>
<li><a href="/liferea/blog/Liferea-Trick-5-Privacy-with-a-SOCKS-Proxy.html">#5: Privacy with SOCKS Proxy</a></li>
<li><a href="/liferea/blog/Liferea-Trick-6-Website-Scraping.html">#6: Website Scraping</a></li>
<li><a href="/liferea/blog/Liferea-Trick-7-Force-Read-Full-Posts.html">#7: Force Read Full Posts</a></li>
<li><a href="/liferea/blog/Liferea-Trick-8-Change-Menu-Accelerators.html">#8: Change Menu Accelerators</a></li>
<li><a href="/liferea/blog/Liferea-Trick-9-Skimming-Through-the-Headlines.html">#9: Skimming Through the Headlines</a></li>
<li><a href="/liferea/blog/Liferea-Trick-10-Custom-CSS-for-Article-Rendering.html">#10: Custom CSS for Article Rendering</a></li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Liferea Trick #7: Force Read Full Posts]]></title>
            <link>https://lzone.de/liferea/blog/2016-08-23-Liferea Trick #7: Force Read Full Posts</link>
            <guid>https://lzone.de/liferea/blog/Liferea%20Trick%20%237%3A%20Force%20Read%20Full%20Posts</guid>
            <pubDate>Tue, 23 Aug 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[<h2>The Problem</h2>
<p>When you have subscribed to an interesting feed that does not provide full posts it can be frustrating. Short of using <a href="/liferea/blog/Liferea-Trick-6-Website-Scraping.html">website scraping</a> as described in the latest post there is nothing you can do to enhance the feed content.</p>
<p>There are legitimate reasons for feed publishers to do so. One might be that the site is earning by display ads, another might be that the publisher wants to engage users directly on their own website.</p>
<h2>How To Solve It?</h2>
<p>So why not follow that wish and simply read the entire website? Liferea allows you to do so by enabling an option in the subscription properties. Just open the subscription properties dialog by right clicking the subscription as selecting "Properties …" and select the last tab "Advanced":</p>
<p><img src="/liferea/help1140/help_feed_prop_adv_1.6.0.png"/></p>
<p>Here you can enable the second option "Auto-load item link …". From now own you will read the website directly and see full content! </p>
<h2>Recent Liferea Tricks</h2>
<ul>
<li><a href="/liferea/blog/Liferea-Trick-1-Middle-Mouse-Button-Clicking.html">#1: Middle Mouse Button</a></li>
<li><a href="/liferea/blog/Liferea-Trick-2-Drag-and-Drop-URLs.html">#2: Drag and Drop URLs</a></li>
<li><a href="/liferea/blog/Liferea-Trick-3-Use-Feed-Auto-Discovery.html">#3: Feed Auto Discovery</a></li>
<li><a href="/liferea/blog/Liferea-Trick-4-Full-Screen-Mode.html">#4: Full Screen</a></li>
<li><a href="/liferea/blog/Liferea-Trick-5-Privacy-with-a-SOCKS-Proxy.html">#5: Privacy with SOCKS Proxy</a></li>
<li><a href="/liferea/blog/Liferea-Trick-6-Website-Scraping.html">#6: Website Scraping</a></li>
<li><a href="/liferea/blog/Liferea-Trick-7-Force-Read-Full-Posts.html">#7: Force Read Full Posts</a></li>
<li><a href="/liferea/blog/Liferea-Trick-8-Change-Menu-Accelerators.html">#8: Change Menu Accelerators</a></li>
<li><a href="/liferea/blog/Liferea-Trick-9-Skimming-Through-the-Headlines.html">#9: Skimming Through the Headlines</a></li>
<li><a href="/liferea/blog/Liferea-Trick-10-Custom-CSS-for-Article-Rendering.html">#10: Custom CSS for Article Rendering</a></li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[I'm not sure about how many users are aware of the feature, but I'm certain it is worth to know about as it saves a lot of clicking and pointing with the mouse. If you are a keyboard user it's worth knowing about the hotkey to <b>skim through headlines</b>.]]></title>
            <link>https://lzone.de/liferea/blog/2016-08-23-Liferea Trick #9: Skimming Through the Headlines</link>
            <guid>https://lzone.de/liferea/blog/Liferea%20Trick%20%239%3A%20Skimming%20Through%20the%20Headlines</guid>
            <pubDate>Tue, 23 Aug 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>I'm not sure about how many users are aware of the feature, but I'm certain it is worth to know about as it saves a lot of clicking and pointing with the mouse. If you are a keyboard user it's worth knowing about the hotkey to <b>skim through headlines</b>.</p>
<h1 id="rememberthehotkey">Remember the Hot Key!</h1>
<p>As this hotkey is configurable check the preference dialog ff you are not sure about the setting. The default setting is <code>&lt;Ctrl&gt;-Space</code>.</p>
<p><img src="/liferea/help1140/help_prefs_headlines_1.14.0.png"/></p>
<h2 id="howitworks">How it Works…</h2>
<p>By using this hot key you can <b>navigate the article pane and the item list view at the same time</b>. As long as the article pane allow vertical scrolling it scrolls down. Once you reach bottom Liferea jumps to the next unread article.</p>
<p>Using the headline skimming hotkey is like a "Next Unread And Scroll Down" menu option…</p>
<h2 id="recentlifereatricks">Recent Liferea Tricks</h2>
<ul>
<li><a href="/liferea/blog/Liferea-Trick-1-Middle-Mouse-Button-Clicking.html">#1: Middle Mouse Button</a></li>
<li><a href="/liferea/blog/Liferea-Trick-2-Drag-and-Drop-URLs.html">#2: Drag and Drop URLs</a></li>
<li><a href="/liferea/blog/Liferea-Trick-3-Use-Feed-Auto-Discovery.html">#3: Feed Auto Discovery</a></li>
<li><a href="/liferea/blog/Liferea-Trick-4-Full-Screen-Mode.html">#4: Full Screen</a></li>
<li><a href="/liferea/blog/Liferea-Trick-5-Privacy-with-a-SOCKS-Proxy.html">#5: Privacy with SOCKS Proxy</a></li>
<li><a href="/liferea/blog/Liferea-Trick-6-Website-Scraping.html">#6: Website Scraping</a></li>
<li><a href="/liferea/blog/Liferea-Trick-7-Force-Read-Full-Posts.html">#7: Force Read Full Posts</a></li>
<li><a href="/liferea/blog/Liferea-Trick-8-Change-Menu-Accelerators.html">#8: Change Menu Accelerators</a></li>
<li><a href="/liferea/blog/Liferea-Trick-9-Skimming-Through-the-Headlines.html">#9: Skimming Through the Headlines</a></li>
<li><a href="/liferea/blog/Liferea-Trick-10-Custom-CSS-for-Article-Rendering.html">#10: Custom CSS for Article Rendering</a></li>
</ul>]]></description>
        </item>
        <item>
            <title><![CDATA[Using sqlite3 WAL Journaling]]></title>
            <link>https://lzone.de/liferea/blog/2012-03-23-Using sqlite3 WAL Journaling</link>
            <guid>https://lzone.de/liferea/blog/Using%20sqlite3%20WAL%20Journaling</guid>
            <pubDate>Fri, 23 Mar 2012 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Morpheus suggested in a comment to check <a href="https://web.archive.org/web/20140112120204/https://bugzilla.mozilla.org/show_bug.cgi?id=573492">recent Mozilla sqlite changes</a>
for their places database. They basically switched to the <a href="https://web.archive.org/web/20140112120204/http://www.sqlite.org/wal.html">new WAL journaling</a>
that is supported since sqlite 3.7. Therefore I performed some measurements on the update behaviour in 
WAL mode with different sqlite page sizes and "PRAGMA synchronous" settings.</p>
<h2 id="theresults">The Results</h2>
<pre><code> FS     Journal Mode  Page Size    Sync Mode  Update Duration
 ext4     none          1k (default) FULL       59s
 ext4     WAL           1k           FULL       6,3s
 ext4     WAL           4k           FULL       6,2s
 ext4     WAL           8k           FULL       5,9s
 ext4     WAL           16k          FULL       5,8s
 ext4     WAL           32k          FULL       6,7s
 ext3     WAL           32k          FULL       1s
 ext4     WAL           32k          NORMAL     0,9s
</code></pre>
<p>According to the sqlite documentation WAL journaling is expected to have a significantly better write-throughput compared to synchronous mode without journaling. The results above confirm this.</p>
<p>When using "PRAGMA synchronous=FULL" the execution time improves to 1/10 of the original 60s. 
With WAL journaling the sqlite documentation recommends to use only "PRAGMA synchronous=NORMAL". 
By doing so we loose the durability guarantee from the ACID criterias, <b>but 1/60 of the original 
execution time might be worth it.</b> The sqlite documentation <a href="https://web.archive.org/web/20140112120204/http://www.sqlite.org/pragma.html#pragma_synchronous">says</a></p>
<p><i>"There is a very small (though non-zero) chance that a power failure at just the wrong time could corrupt the database in NORMAL mode."</i></p>
<p>Additionally the page size is said to have an influence on the performance. This isn't the case for Liferea, but to be on the safe side it doesn't hurt increase from the default setting of 1k to 32k which should cost only a bit more memory.</p>
<h2 id="disadvantages">Disadvantages:</h2>
<ul>
<li>As already mentioned the chance of data loss will increase…</li>
<li>Also sqlite3s WAL journal is not supported on network filesystems!</li>
</ul>
<h2 id="fazit">Fazit</h2>
<p>We have to try to switch to WAL mode.There is no guarantee that it will be safe without long term tests, but the immediate performance gain is critical.</p>
<p>I'll create two releases 1.8.3 and 1.9.2 soon and hope you give a lot of feedback! It would be most helpful if you can include the number of feeds, your cache size setting and DB file size.</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Work on 1_8]]></title>
            <link>https://lzone.de/liferea/blog/2009-10-22-Work on 1_8</link>
            <guid>https://lzone.de/liferea/blog/Work%20on%201_8</guid>
            <pubDate>Thu, 22 Oct 2009 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>Just a short note on what we are doing for 1.8. Right now we try to reduce startup time by killing costly cleanup stuff done on startup by cleaning up the DB schema and we are also thinking about a good way to periodically vacuum the database on startup. The problem there is to find a good interval and to avoid doing it too often as it costs time even if the DB is in a 100% clean state.</p>
<p>If you want to test try running SVN trunk which performs a cache migration to the new DB schema. By reducing the schema by one unnecessary table we now skip some consistency checks which sometimes took around 10s of startup time.</p>
<p>If you do test it please <b>post us some comparison values</b> in the comments! You can gather the startup time by launching both 1.6 and trunk using this command:</p>
<pre><code> liferea --debug-db --debug-performance | grep "startup took"
</code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[How to run VACUUM]]></title>
            <link>https://lzone.de/liferea/blog/2008-08-01-How to run VACUUM</link>
            <guid>https://lzone.de/liferea/blog/How%20to%20run%20VACUUM</guid>
            <pubDate>Fri, 01 Aug 2008 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>As explained in the last post I see no way to automatically run the "VACUUM" command of sqlite which more or less defragments the DB structure. Nonetheless for everyone who wants to run it manually here is how to do it:</p>
<ol>
<li>Shutdown Liferea</li>
<li>Start the sqlite client by running: "sqlite3 ~/.liferea_1.4/liferea.db"</li>
<li>At the prompt enter: "VACUUM;"</li>
<li>Wait until the prompt reappears.</li>
<li>Restart Liferea</li>
</ol>
<p>Situations when you might want to VACUUM</p>
<ul>
<li>When the DB file (~/.liferea_1.4/liferea.db) is very large (e.g. &gt;50MB)</li>
<li>When you have only a few feeds with a low cache setting (e.g. 30 feeds and 100 items) and believe Liferea to be unreasonably slow.</li>
<li>When you have run Liferea for ages.</li>
</ul>
<p>If you don't know what this is all about: please do not worry about it. In many cases you might not need to do anything.</p>]]></description>
        </item>
        <item>
            <title><![CDATA[Why auto VACUUM is no good]]></title>
            <link>https://lzone.de/liferea/blog/2008-08-01-Why auto-VACUUM is no good</link>
            <guid>https://lzone.de/liferea/blog/Why%20auto%20VACUUM%20is%20no%20good</guid>
            <pubDate>Fri, 01 Aug 2008 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>During the various performance discussions during the last time here and there people 
suggested to run "VACUUM" on the Liferea database once it gets slow. This is in line 
with the sqlite documentation which <a href="https://web.archive.org/web/20150619014912/http://sqlite.org/lang_vacuum.html">says</a>:</p>
<p><i>When an object (table, index, or trigger) is dropped from the database, it leaves 
behind empty space. This makes the database file larger than it needs to be, but 
can speed up inserts. In time inserts and deletes can leave the database file 
structure fragmented, which slows down disk access to the database contents.</p>
<p>The VACUUM command cleans the main database by copying its contents to a temporary 
database file and reloading the original database file from the copy. This eliminates 
free pages, aligns table data to be contiguous, and otherwise cleans up the database 
file structure.</i></p>
<p>The problem with it is that <b>it also takes very long</b>. With a 50MB DB file I experienced 
a runtime of over 1 minute. This is why this can be only a tool for experienced users 
that know how to do it manually knowing what to expect. For executing such a long term 
operation automatically on runtime would surely be unacceptable to the unsuspecting user. 
Also there is no good way how to decide when to do a VACUUM to save disk space and 
improve performance.</p>]]></description>
        </item>
    </channel>
</rss>